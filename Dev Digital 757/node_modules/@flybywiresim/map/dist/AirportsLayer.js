import { Airport } from "@flybywiresim/api-client";
import React, { useEffect, useState } from "react";
import ArrivalWhite from './res/icons/arrival_white.png';
import DepartureWhite from './res/icons/departure_white.png';
import { FeatureGroup, Marker, Tooltip } from "react-leaflet";
import L from "leaflet";
var AirportType;

(function (AirportType) {
  AirportType[AirportType["Departure"] = 0] = "Departure";
  AirportType[AirportType["Arrival"] = 1] = "Arrival";
})(AirportType || (AirportType = {}));

const AirportsLayer = props => {
  const [displayedAirports, setDisplayedAirports] = useState([]);
  useEffect(() => {
    setDisplayedAirports([]);

    if (props.airportSearch) {
      findAirports(props.airportSearch);
      return;
    }

    if (props.connection) {
      findAirports([{
        icao: props.connection.origin,
        airportType: AirportType.Departure
      }, {
        icao: props.connection.destination,
        airportType: AirportType.Arrival
      }]);
    }
  }, [props.airportSearch, props.connection]);

  async function findAirports(searches) {
    const airports = [];

    for (const search of searches) {
      if (!!search.icao) {
        try {
          airports.push(await getAirport(search.icao, search.airportType));
        } catch (e) {
          console.error(e);
        }
      }
    }

    setDisplayedAirports(airports);
  }

  async function getAirport(icao, airportType) {
    const arpt = await Airport.get(icao);
    return {
      airportType,
      airport: arpt
    };
  }

  return /*#__PURE__*/React.createElement(FeatureGroup, null, displayedAirports.map(arptToShow => /*#__PURE__*/React.createElement(Marker, {
    key: arptToShow.airport.icao + '-' + arptToShow.airportType,
    zIndexOffset: 9999,
    position: [arptToShow.airport.lat, arptToShow.airport.lon],
    icon: L.icon({
      iconSize: [26, 26],
      iconAnchor: [13, 13],
      iconUrl: arptToShow.airportType === AirportType.Arrival ? props.arrivalIcon || ArrivalWhite : props.departureIcon || DepartureWhite
    })
  }, /*#__PURE__*/React.createElement(Tooltip, {
    className: "airport-tooltip",
    direction: "top",
    permanent: true
  }, /*#__PURE__*/React.createElement("p", null, arptToShow.airport.icao, " - ", arptToShow.airport.name)))));
};

export default AirportsLayer;