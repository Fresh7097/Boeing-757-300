<ModelBehaviors>

<Include Path="Asobo\Generic\Animations.xml"/>
<Include Path="A32NX\Interior\A32NX_Interior_Includes.xml"/>
<Include Path="Asobo\Common.xml"/>	

<Template Name="Compass_Disc">
    <DefaultTemplateParameters>
        <ANIM_NAME>Compass</ANIM_NAME>
        <ANIM_LENGTH>360</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:PLANE HEADING DEGREES GYRO, degree)</ANIM_CODE>
		</UseTemplate>
</Template>



    <Template Name="DD_GT_Switch_Dummy">
        <DefaultTemplateParameters>
            <SWITCH_POSITION_TYPE>O</SWITCH_POSITION_TYPE>
            <SWITCH_POSITION_VAR>SwitchState</SWITCH_POSITION_VAR>
            <LEFT_SINGLE_CODE></LEFT_SINGLE_CODE>
            <NUM_STATES>2</NUM_STATES>
            <ANIMREF_ID>0</ANIMREF_ID>
            <ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
            <ANIMTIP_1_ON_PERCENT>1</ANIMTIP_1_ON_PERCENT>
            <CODE_POS_0></CODE_POS_0>
            <CODE_POS_1></CODE_POS_1>
            <CODE_POS_2></CODE_POS_2>
        </DefaultTemplateParameters>
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <Switch Param="NUM_STATES">
                <Case Value="2">
                    <UseTemplate Name = "ASOBO_GT_Anim_Code">
                        <ANIM_CODE>(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) 100 *</ANIM_CODE>
                    </UseTemplate>
                    <UseTemplate Name = "ASOBO_GT_AnimTriggers_2SoundEvents">
                    </UseTemplate>
                    <UseTemplate Name = "ASOBO_GT_Interaction_LeftSingle_Code">
                        <LEFT_SINGLE_CODE>
                        (#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) ! (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
                        #LEFT_SINGLE_CODE#
                        </LEFT_SINGLE_CODE>
                    </UseTemplate>
                </Case>
                <Case Value="3">
                    <UseTemplate Name = "ASOBO_GT_Switch_3States">
                        <CODE_POS_0>
                        0 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
                        #CODE_POS_0#
                        </CODE_POS_0>
                        <CODE_POS_1>
                        1 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
                        #CODE_POS_1#
                        </CODE_POS_1>
                        <CODE_POS_2>
                        2 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
                        #CODE_POS_2#
                        </CODE_POS_2>
                        <STATE0_TEST>(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) 0 ==</STATE0_TEST>
                        <STATE1_TEST>(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) 1 ==</STATE1_TEST>
                        <STATE2_TEST>(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) 1 ==</STATE2_TEST>
                    </UseTemplate>
                </Case>
            </Switch>
        </Component>
    </Template>

    <Template Name="DD_Push_Held">
        <DefaultTemplateParameters>
            <ANIM_NAME>#NODE_ID#</ANIM_NAME>
            <WWISE_EVENT_1>roundbutton</WWISE_EVENT_1>
            <WWISE_EVENT_2>roundbutton</WWISE_EVENT_2>
            <CURSOR>Hand</CURSOR>

            <SEQ1_EMISSIVE_DRIVES_VISIBILITY>True</SEQ1_EMISSIVE_DRIVES_VISIBILITY>
            <SEQ2_EMISSIVE_DRIVES_VISIBILITY>True</SEQ2_EMISSIVE_DRIVES_VISIBILITY>
            <SEQ3_EMISSIVE_DRIVES_VISIBILITY>True</SEQ3_EMISSIVE_DRIVES_VISIBILITY>
            <SEQ4_EMISSIVE_DRIVES_VISIBILITY>True</SEQ4_EMISSIVE_DRIVES_VISIBILITY>
            <EMISSIVE_DIM>(L:A32NX_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 }</EMISSIVE_DIM>

            <SEQ1_NODE_ID>#NODE_ID#_SEQ1</SEQ1_NODE_ID>
            <SEQ2_NODE_ID>#NODE_ID#_SEQ2</SEQ2_NODE_ID>
            <SEQ3_NODE_ID>#NODE_ID#_SEQ3</SEQ3_NODE_ID>
            <SEQ4_NODE_ID>#NODE_ID#_SEQ4</SEQ4_NODE_ID>

            <SEQ_POWERED>1</SEQ_POWERED>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
            <SEQ3_POWERED>1</SEQ3_POWERED>
            <SEQ4_POWERED>1</SEQ4_POWERED>
        </DefaultTemplateParameters>

        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Push_Button_Held">
                <Condition Valid="LEFT_SINGLE_CODE">
                    <True>
                        <Condition Valid="LEFT_LEAVE_CODE">
                            <True>
                                <LEFT_SINGLE_CODE>#LEFT_SINGLE_CODE#</LEFT_SINGLE_CODE>
                                <LEFT_LEAVE_CODE>#LEFT_LEAVE_CODE#</LEFT_LEAVE_CODE>
                            </True>
                            <False>
                                <LEFT_SINGLE_CODE>#LEFT_SINGLE_CODE#</LEFT_SINGLE_CODE>
                                <LEFT_LEAVE_CODE/>
                            </False>
                        </Condition>
                    </True>
                    <False>
                        <Condition Valid="LEFT_LEAVE_CODE">
                            <True>
                                <LEFT_SINGLE_CODE/>
                                <LEFT_LEAVE_CODE>#LEFT_LEAVE_CODE#</LEFT_LEAVE_CODE>
                            </True>
                            <False>
                                <LEFT_SINGLE_CODE>1 (&gt;#HOLD_SIMVAR#)</LEFT_SINGLE_CODE>
                                <LEFT_LEAVE_CODE>0 (&gt;#HOLD_SIMVAR#)</LEFT_LEAVE_CODE>
                            </False>
                        </Condition>
                    </False>
                </Condition>
            </UseTemplate>
        </Component>

        <Condition Check="SEQ1_CODE">
            <True>
                <Component ID="#SEQ1_NODE_ID#" Node="#SEQ1_NODE_ID#">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>#SEQ1_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ1_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</EMISSIVE_CODE>

                        <Condition Valid="SEQ1_EMISSIVE_DRIVES_VISIBILITY">
                            <True>
                                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
                            </True>
                        </Condition>
                    </UseTemplate>
                </Component>
            </True>
        </Condition>

        <Condition Check="SEQ2_CODE">
            <True>
                <Component ID="#SEQ2_NODE_ID#" Node="#SEQ2_NODE_ID#">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>#SEQ2_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ2_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</EMISSIVE_CODE>

                        <Condition Valid="SEQ2_EMISSIVE_DRIVES_VISIBILITY">
                            <True>
                                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
                            </True>
                        </Condition>
                    </UseTemplate>
                </Component>
            </True>
        </Condition>

        <Condition Check="SEQ3_CODE">
            <True>
                <Component ID="#SEQ3_NODE_ID#" Node="#SEQ3_NODE_ID#">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>#SEQ3_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ3_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</EMISSIVE_CODE>

                        <Condition Valid="SEQ3_EMISSIVE_DRIVES_VISIBILITY">
                            <True>
                                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
                            </True>
                        </Condition>
                    </UseTemplate>
                </Component>
            </True>
        </Condition>

        <Condition Check="SEQ4_CODE">
            <True>
                <Component ID="#SEQ4_NODE_ID#" Node="#SEQ4_NODE_ID#">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>#SEQ4_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ4_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</EMISSIVE_CODE>

                        <Condition Valid="SEQ4_EMISSIVE_DRIVES_VISIBILITY">
                            <True>
                                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
                            </True>
                        </Condition>
                    </UseTemplate>
                </Component>
            </True>
        </Condition>
    </Template>

     <Template Name="DD_Push_Toggle">
        <DefaultTemplateParameters>
            <SEQ_POWERED>1</SEQ_POWERED>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
            <EMISSIVE_DIM>(L:DD_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 }</EMISSIVE_DIM>
        </DefaultTemplateParameters>
        <UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
            <NODE_ID>#NODE_ID#</NODE_ID>
            <ANIM_NAME>#NODE_ID#</ANIM_NAME>

            <Condition Check="MOMENTARY">
                <True>
                    <WWISE_EVENT_1>mpb1on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>mpb1off</WWISE_EVENT_2>
                </True>
                <False>
                    <WWISE_EVENT_1>pb1on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>pb1off</WWISE_EVENT_2>
                </False>
            </Condition>

            <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
            <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

            <Condition Check="DOWN_CODE">
                <True>
                    <STATUS>True</STATUS>
                </True>
                <False>
                    <STATUS>False</STATUS>
                </False>
            </Condition>
            <Condition Check="LEFT_SINGLE_CODE">
                <True>
                    <Condition Check="MOMENTARY">
                        <True>
                            <LEFT_SINGLE_CODE>#LEFT_SINGLE_CODE#</LEFT_SINGLE_CODE>
                        </True>
                        <False>
                            <LEFT_SINGLE_CODE>
                                #LEFT_SINGLE_CODE#

                                (L:XMLVAR_Momentary_#NODE_ID#_Pressed) ! (&gt;L:XMLVAR_Momentary_#NODE_ID#_Pressed)
                            </LEFT_SINGLE_CODE>
                            <Condition Check="DOWN_CODE">
                                <True>
                                    <DOWN_STATE_CODE>#DOWN_CODE#</DOWN_STATE_CODE>
                                </True>
                                <False>
                                    <DOWN_STATE_CODE>(L:XMLVAR_Momentary_#NODE_ID#_Pressed)</DOWN_STATE_CODE>
                                </False>
                            </Condition>
                        </False>
                    </Condition>
                </True>
            </Condition>

            <Condition Check="TOGGLE_SIMVAR">
                <True>
                    <LEFT_SINGLE_CODE>(#TOGGLE_SIMVAR#, Bool) ! (&gt;#TOGGLE_SIMVAR#)</LEFT_SINGLE_CODE>
                    <Condition Check="MOMENTARY">
                        <False>
                            <Condition Check="DOWN_CODE">
                                <True>
                                    <DOWN_STATE_CODE>#DOWN_CODE#</DOWN_STATE_CODE>
                                </True>
                                <False>
                                    <Condition Check="INVERTED_ANIMATION">
                                        <True>
                                            <DOWN_STATE_CODE>(#TOGGLE_SIMVAR#) !</DOWN_STATE_CODE>
                                        </True>
                                        <False>
                                            <DOWN_STATE_CODE>(#TOGGLE_SIMVAR#)</DOWN_STATE_CODE>
                                        </False>
                                    </Condition>
                                </False>
                            </Condition>
                        </False>
                    </Condition>
                </True>
            </Condition>

            <Condition Check="DISABLE_SEQ1">
                <False>
                    <Condition Check="SEQ1_CODE">
                        <True>
                            <SEQ1_EMISSIVE_CODE>#SEQ1_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ1_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ1_EMISSIVE_CODE>
                        </True>
                        <False>
                            <SEQ1_EMISSIVE_CODE>(L:DD_OVHD_INTLT_ANN) 0 == #SEQ1_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ1_EMISSIVE_CODE>
                        </False>
                    </Condition>
                </False>
                <True>
                    <SEQ1_EMISSIVE_CODE>0</SEQ1_EMISSIVE_CODE>
                </True>
            </Condition>

            <Condition Check="DISABLE_SEQ2">
                <False>
                    <Condition Check="SEQ2_CODE">
                        <True>
                            <SEQ2_EMISSIVE_CODE>#SEQ2_CODE# (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ2_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ2_EMISSIVE_CODE>
                        </True>
                        <False>
                            <Condition Check="TOGGLE_SIMVAR">
                                <True>
                                    <Condition Check="INVERTED">
                                        <True>
                                            <SEQ2_EMISSIVE_CODE>(#TOGGLE_SIMVAR#, Bool) ! (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ2_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ2_EMISSIVE_CODE>
                                        </True>
                                        <false>
                                            <SEQ2_EMISSIVE_CODE>(#TOGGLE_SIMVAR#, Bool) (L:DD_OVHD_INTLT_ANN) 0 == or #SEQ2_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ2_EMISSIVE_CODE>
                                        </false>
                                    </Condition>
                                </True>
                                <False>
                                    <SEQ2_EMISSIVE_CODE>(L:DD_OVHD_INTLT_ANN) 0 == #SEQ2_POWERED# and #SEQ_POWERED# and #EMISSIVE_DIM# *</SEQ2_EMISSIVE_CODE>
                                </False>
                            </Condition>
                        </False>
                    </Condition>
                </False>
                <True>
                    <SEQ2_EMISSIVE_CODE>0</SEQ2_EMISSIVE_CODE>
                </True>
            </Condition>

            <Condition Check="ROUND">
                <True>
                    <WWISE_EVENT_1>roundbutton</WWISE_EVENT_1>
                    <WWISE_EVENT_2>roundbutton</WWISE_EVENT_2>
                </True>
            </Condition>
        </UseTemplate>
    </Template>

    <Template Name="DD_Aircond_Knob_Template">
        <DefaultTemplateParameters>
            <ID>1</ID>
        </DefaultTemplateParameters>

        <UseTemplate Name="DD_Aircond_Knob_SubTemplate">
        </UseTemplate>
    </Template>

    <Template Name="DD_Aircond_Knob_SubTemplate">
        <DefaultTemplateParameters>
            <NODE_ID>KNOB_OVHD_AIRCOND_#ID#</NODE_ID>
            <ANIM_SIMVAR>L:A320_Neo_AIRCOND_LVL_#ID#</ANIM_SIMVAR>
            <ANIMCURSOR_MAX>1</ANIMCURSOR_MAX>
        </DefaultTemplateParameters>

        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="DD_Knob_Finite_From_Simvar">
                <SET_CODE>(&gt;#ANIM_SIMVAR#)</SET_CODE>
            </UseTemplate>
        </Component>
    </Template>

    <Template Name="DD_Knob_Finite_From_Simvar">
        <DefaultTemplateParameters>
            <ANIM_SIMVAR_UNITS>percent</ANIM_SIMVAR_UNITS>
            <ANIM_SIMVAR_MIN>0</ANIM_SIMVAR_MIN>
            <ANIM_SIMVAR_MAX>100</ANIM_SIMVAR_MAX>
            <ANIM_NAME>#ANIM_NAME#</ANIM_NAME>
            <INCREMENT>1</INCREMENT>
            <WHEEL_INCREMENT>4</WHEEL_INCREMENT>
            <EXTRA_INTERACTION/>
            <ANIMREF_ID>0</ANIMREF_ID>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_0/>
            <ANIMTIP_1/>
            <ANIM_LAG>400</ANIM_LAG>
            <ANIM_WRAP>True</ANIM_WRAP>
        </DefaultTemplateParameters>

        <OverrideTemplateParameters>
            <Condition Valid="POTENTIOMETER">
                <True>
                    <ANIM_SIMVAR>#ANIM_SIMVAR#:#POTENTIOMETER#</ANIM_SIMVAR>
                    <SET_CODE>#POTENTIOMETER# (&gt;K:2:LIGHT_POTENTIOMETER_SET)</SET_CODE>
                </True>
            </Condition>
        </OverrideTemplateParameters>

        <UseTemplate Name="ASOBO_GT_Anim_Code">
            <ANIM_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #ANIM_SIMVAR_MIN# - #ANIM_SIMVAR_MAX# #ANIM_SIMVAR_MIN# - / 100 *
            </ANIM_CODE>
        </UseTemplate>

        <UseTemplate Name="DD_Knob_Finite_From_Simvar_Impl">
            <CLOCKWISE_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #INCREMENT# + #ANIM_SIMVAR_MAX# min #SET_CODE#
            </CLOCKWISE_CODE>
            <ANTICLOCKWISE_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #INCREMENT# - #ANIM_SIMVAR_MIN# max #SET_CODE#
            </ANTICLOCKWISE_CODE>

            <!-- Provide the wheel code if we have WHEEL_INCREMENT -->
            <Condition Valid="WHEEL_INCREMENT">
                <True>
                    <WHEEL_CLOCKWISE_CODE>
                        (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #WHEEL_INCREMENT# + #ANIM_SIMVAR_MAX# min #SET_CODE#
                    </WHEEL_CLOCKWISE_CODE>

                    <WHEEL_ANTICLOCKWISE_CODE>
                        (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #WHEEL_INCREMENT# - #ANIM_SIMVAR_MIN# max #SET_CODE#
                    </WHEEL_ANTICLOCKWISE_CODE>
                </True>
            </Condition>
        </UseTemplate>

        <Condition Valid="WWISE_EVENT">
            <UseTemplate Name="ASOBO_GT_AnimTriggers_SoundEvents_Same">
            </UseTemplate>
        </Condition>
    </Template>

    <Template Name="DD_Knob_Finite_From_Simvar_Impl">
        <DefaultTemplateParameters>
            <LEFTARROW>TurnLeft</LEFTARROW>
            <RIGHTARROW>TurnRight</RIGHTARROW>
            <COOR_DIRECTION>X</COOR_DIRECTION>
            <UPDATE_FREQUENCY>40</UPDATE_FREQUENCY>
            <UPDATE_DELAY>0.4</UPDATE_DELAY>
        </DefaultTemplateParameters>

        <!-- We override the wheel code if we have WHEEL_CLOCKWISE_CODE, WHEEL_ANTICLOCKWISE_CODE -->
        <OverrideTemplateParameters>
            <Condition Valid="WHEEL_CLOCKWISE_CODE">
                <True>
                    <ACTUAL_WHEEL_CLOCKWISE_CODE>
                        #WHEEL_CLOCKWISE_CODE#
                    </ACTUAL_WHEEL_CLOCKWISE_CODE>
                </True>
                <False>
                    <ACTUAL_WHEEL_CLOCKWISE_CODE>
                        #CLOCKWISE_CODE#
                    </ACTUAL_WHEEL_CLOCKWISE_CODE>
                </False>
            </Condition>
            <Condition Valid="WHEEL_ANTICLOCKWISE_CODE">
                <True>
                    <ACTUAL_WHEEL_ANTICLOCKWISE_CODE>
                        #WHEEL_ANTICLOCKWISE_CODE#
                    </ACTUAL_WHEEL_ANTICLOCKWISE_CODE>
                </True>
                <False>
                    <ACTUAL_WHEEL_ANTICLOCKWISE_CODE>
                        #ANTICLOCKWISE_CODE#
                    </ACTUAL_WHEEL_ANTICLOCKWISE_CODE>
                </False>
            </Condition>
        </OverrideTemplateParameters>

        <Update Frequency="#UPDATE_FREQUENCY#">
            (O:XMLVAR_FirstUpdateTime) (E:SIMULATION TIME, seconds) &lt; if{
            (O:_MouseDownRelativePos#COOR_DIRECTION#) 0 &gt; if{ #CLOCKWISE_CODE# } els{
            (O:_MouseDownRelativePos#COOR_DIRECTION#) 0 &lt; if{ #ANTICLOCKWISE_CODE# } }
            }
        </Update>

        <UseTemplate Name="ASOBO_GT_MouseRect">
            <MouseFlags>LeftAll+WheelUp+WheelDown</MouseFlags>
            <CALLBACKCODE>
                (M:Event) 'WheelUp'    scmi 0 == if{ #ACTUAL_WHEEL_CLOCKWISE_CODE# } els{
                (M:Event) 'WheelDown'  scmi 0 == if{ #ACTUAL_WHEEL_ANTICLOCKWISE_CODE# } els{
                (M:Event) 'LeftSingle' scmi 0 == if{
                (M:Relative#COOR_DIRECTION#) (&gt;O:_MouseDownRelativePos#COOR_DIRECTION#)
                (E:SIMULATION TIME, seconds) #UPDATE_DELAY# + (&gt;O:XMLVAR_FirstUpdateTime)
                (O:_MouseDownRelativePos#COOR_DIRECTION#) 0 &gt; if{ #CLOCKWISE_CODE# } els{
                (O:_MouseDownRelativePos#COOR_DIRECTION#) 0 &lt; if{ #ANTICLOCKWISE_CODE# } }
                } els{ (M:Event) 'LeftRelease'   scmi 0 == if{
                0 (&gt;O:_MouseDownRelativePos#COOR_DIRECTION#)
                } } } }
            </CALLBACKCODE>
        </UseTemplate>
    </Template>

<Template Name="DD_Pushbutton_Momentary_Template">
	<DefaultTemplateParameters>
		<NODE_ID>#PB_ANIM_NAME#</NODE_ID>
		<PB_TRIGGER_NAME>#PB_ANIM_NAME#</PB_TRIGGER_NAME>
		<PB_ANNUN_UPPER_STATE>#PB_ANIM_NAME#_STATE</PB_ANNUN_UPPER_STATE>
		<PB_ANNUN_LOWER_STATE>#PB_ANIM_NAME#_STATE</PB_ANNUN_LOWER_STATE>
		<WWISE_EVENT>AMB_Push_In</WWISE_EVENT>
		<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
		<DIRECTION>Forward</DIRECTION>
		<ACTION>Play</ACTION>
	</DefaultTemplateParameters>
	<UseTemplate Name="ASOBO_GT_Anim_Code">
		<ANIM_NAME>#PB_ANIM_NAME#</ANIM_NAME>
		<ANIM_LENGTH>1</ANIM_LENGTH>
		<ANIM_CODE>(L:#PB_ANIM_NAME#_ANIM, Bool)</ANIM_CODE>
	</UseTemplate>

	<UseTemplate Name="ASOBO_GT_MouseRect">
		<Cursor>Hand</Cursor>
		<MouseFlags>LeftSingle+LeftRelease</MouseFlags>
		<NODE_ID>#PB_ANIM_NAME#</NODE_ID>
		<CALLBACKCODE>
			(M:Event) 'LeftSingle' scmi 0 == if{
			1 (&gt;L:#PB_ANIM_NAME#_ANIM)
			}
			(M:Event) 'LeftRelease' scmi 0 == (L:#PB_ANIM_NAME#_ANIM, Bool) 1 == and if{
			0 (&gt;L:#PB_ANIM_NAME#_ANIM)
			1 (&gt;L:#PB_TRIGGER_NAME#)
			}
		</CALLBACKCODE>
	</UseTemplate>
	<Condition Valid="PB_ANNUN_UPPER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_UPPER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_UPPER_STATE#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="PB_ANNUN_LOWER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_LOWER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_LOWER_STATE#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="DISABLE_ANIMATION">
		<False>
			<AnimationTriggers Animation="#PB_ANIM_NAME#">
				<EventTrigger NormalizedTime="#NORMALIZED_TIME#" Direction="#DIRECTION#">
					<SoundEvent WwiseEvent="#WWISE_EVENT#" Action="#ACTION#"/>
				</EventTrigger>
			</AnimationTriggers>
		</False>
	</Condition>
</Template>

<Template Name="ASOBO_ELECTRICAL_Switch_Engine_Elec_Template">
	<DefaultTemplateParameters>
		<ID>2</ID>
	</DefaultTemplateParameters>
	<UseTemplate Name="ASOBO_ELECTRICAL_Switch_Engine_Elec_SubTemplate">
	</UseTemplate>
	</Template>	
	<Template Name="ASOBO_ELECTRICAL_Switch_Engine_Elec_SubTemplate"> <!-- TODO -->
	<DefaultTemplateParameters>
		<ANIM_NAME>ELECTRICAL_Switch_Engine_Bleed_#ID#</ANIM_NAME>
		<NODE_ID>ELECTRICAL_Switch_Engine_Bleed_#ID#</NODE_ID>
		<PART_ID>ELECTRICAL_Switch_Engine_Bleed</PART_ID>
		
		<FAULT_NODE_ID>ELECTRICAL_Switch_Engine_Bleed_Fault_#ID#</FAULT_NODE_ID>
		<OFF_NODE_ID>ELECTRICAL_Switch_Engine_Bleed_Off_#ID#</OFF_NODE_ID>
		<WWISE_EVENT_1>engine_bleed_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>engine_bleed_switch_off</WWISE_EVENT_2>
		<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
		<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
		<IS_AIRLINER>False</IS_AIRLINER>	
	</DefaultTemplateParameters>
	<OverrideTemplateParameters>
		<LEFT_SINGLE_CODE>#ID# (&gt;K:ENGINE_BLEED_AIR_SOURCE_TOGGLE)</LEFT_SINGLE_CODE>
		<Switch Param="TYPE">
			<Case Value="AIRBUS">
				<IS_AIRLINER>True</IS_AIRLINER>
				<SEQ1_EMISSIVE_CODE>0</SEQ1_EMISSIVE_CODE>
				<SEQ2_EMISSIVE_CODE>(A:BLEED AIR ENGINE:#ID#, Bool) !</SEQ2_EMISSIVE_CODE>
			</Case>
			<Case Value="BOEING">
				<IS_AIRLINER>True</IS_AIRLINER>
				<SEQ1_EMISSIVE_CODE>(A:BLEED AIR ENGINE:#ID#, Bool) (A:GENERAL ENG PCT MAX RPM:#ENGINE_ID#, Percent) 1 &lt; and</SEQ1_EMISSIVE_CODE>
				<SEQ2_EMISSIVE_CODE>(A:BLEED AIR ENGINE:#ID#, Bool) !</SEQ2_EMISSIVE_CODE>
			</Case>
		</Switch>
	</OverrideTemplateParameters>
	
	<Condition Check="IS_AIRLINER" Match="True">
		<True>
			<UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
			</UseTemplate>
		</True>
		<False>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Push_Button">
				</UseTemplate>
			</Component>
		</False>
	</Condition>
	</Template>	
	
	<Template Name="ASOBO_AIRBUS_Push_Fuel_Valve_Template">
	<DefaultTemplateParameters>
		<NODE_ID>AIRBUS_Push_Fuel_Valve</NODE_ID>
		<ANIM_NAME>AIRBUS_Push_Fuel_Valve</ANIM_NAME>
		<PART_ID>AIRBUS_Push_Fuel_Valve</PART_ID> 
		<ID>1</ID>
		<SEQ1_EMISSIVE_CODE>(A:FUELSYSTEM VALVE OPEN:#ID#, Bool)</SEQ1_EMISSIVE_CODE>
		<SEQ2_EMISSIVE_CODE>(A:FUELSYSTEM VALVE SWITCH:#ID#, Bool)</SEQ2_EMISSIVE_CODE>
		<LEFT_SINGLE_CODE/>
		<OFF_TOOLTIP></OFF_TOOLTIP>
		<ON_TOOLTIP></ON_TOOLTIP>
	</DefaultTemplateParameters>
	
	<UseTemplate Name="ASOBO_AIRLINER_SubNodes_Setter_Template">
		<TEMPLATE_TO_CALL>ASOBO_GT_Push_Button_Airliner</TEMPLATE_TO_CALL>
		<LEFT_SINGLE_CODE> #LEFT_SINGLE_CODE# #ID# (&gt;K:FUELSYSTEM_VALVE_TOGGLE)</LEFT_SINGLE_CODE>
		<TOOLTIPID>%((A:FUELSYSTEM VALVE SWITCH:#ID#, Bool) !)%{if}TT:#OFF_TOOLTIP#%{else}TT:#ON_TOOLTIP#%{end}</TOOLTIPID> <!-- use <OFF_TOOLTIP></OFF_TOOLTIP> <ON_TOOLTIP></ON_TOOLTIP> to define tooltips -->
	</UseTemplate>
	</Template>

<Template Name="ASOBO_AIRLINER_IRS_Knob_Template">
		<DefaultTemplateParameters>
		<ID>1</ID>
		</DefaultTemplateParameters>

	<UseTemplate Name="ASOBO_AIRLINER_IRS_Knob_SubTemplate">
	</UseTemplate>
	</Template>

	<Template Name="DD_AIRLINER_IRS_Knob_SubTemplate">
	<DefaultTemplateParameters>
		<NODE_ID>knob_ovhd_irs_#ID#</NODE_ID>
		<ANIM_NAME>knob_ovhd_irs_#ID#</ANIM_NAME>
		<WWISE_EVENT>standbypower_selector_knob</WWISE_EVENT>
		<WWISE_EVENT_1>standbypower_selector_knob</WWISE_EVENT_1>
		<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
		<WWISE_EVENT_2>standbypower_selector_knob</WWISE_EVENT_2>
		<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

		<KNOB_NUM_STATE>4</KNOB_NUM_STATE>
		<KNOB_POSITION_TYPE>L</KNOB_POSITION_TYPE>
		<KNOB_POSITION_VAR>747_IRS_KNOB_#ID#</KNOB_POSITION_VAR>
		<ANIMCURSOR_MAX>1</ANIMCURSOR_MAX>
	</DefaultTemplateParameters>

	<Component ID="#NODE_ID#" Node="#NODE_ID#"> 
		<UseTemplate Name="ASOBO_GT_Switch_#KNOB_NUM_STATE#States">
			<SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<SWITCH_POSITION_TYPE>#KNOB_POSITION_TYPE#</SWITCH_POSITION_TYPE>
			<SWITCH_POSITION_VAR>#KNOB_POSITION_VAR#</SWITCH_POSITION_VAR>		
		</UseTemplate>
	</Component>
	</Template>

<Template Name="DD_SWITCH_DOORPANEL_LOCK">
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Switch_3States">
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <PART_ID>#NODE_ID#</PART_ID>
                <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
                <WWISE_EVENT>clds</WWISE_EVENT>
                <CODE_POS_0>0 (&gt;L:A32NX_COCKPIT_DOOR_LOCKED)</CODE_POS_0>
                <CODE_POS_2>1 (&gt;L:A32NX_COCKPIT_DOOR_LOCKED)</CODE_POS_2>
                <STATE_MAX_TIMER>0.3</STATE_MAX_TIMER>
                <STATE0_TIMER>0.3</STATE0_TIMER>
                <STATE2_TIMER>0.3</STATE2_TIMER>
                <REST_STATE>1</REST_STATE>
                <MOMENTARY_SWITCH/>
            </UseTemplate>
        </Component>
    </Template>

<Template Name="DD_ELECTRICAL_Switch_Bus_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="DD_ELECTRICAL_Switch_Bus_SubTemplate">
		</UseTemplate>
	</Template>

    <Template Name="DD_ELECTRICAL_Switch_Bus_SubTemplate">
		<DefaultTemplateParameters>
			<NODE_ID>ELECTRICAL_Switch_Bus_#ID#</NODE_ID>
			<ANIM_NAME>ELECTRICAL_Switch_Bus_#ID#</ANIM_NAME>
			<PART_ID>ELECTRICAL_Switch_Bus</PART_ID>
			<WWISE_EVENT_1>bus_tie_switch_off</WWISE_EVENT_1>
			<WWISE_EVENT_2>bus_tie_switch_on</WWISE_EVENT_2>
			<AUDIO_NORMALIZED_TIME_1>0.1</AUDIO_NORMALIZED_TIME_1>
			<AUDIO_NORMALIZED_TIME_2>0.5</AUDIO_NORMALIZED_TIME_2>
			<ON_TOOLTIP></ON_TOOLTIP>
			<OFF_TOOLTIP></OFF_TOOLTIP>
		</DefaultTemplateParameters>
		<OverrideTemplateParameters>
			<LEFT_SINGLE_CODE>#SOURCE_ID# #ID# (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)</LEFT_SINGLE_CODE>
			<Switch Param="TYPE">
				<Case Value="BOEING">
					<IS_AIRLINER>True</IS_AIRLINER>
					<SEQ1_EMISSIVE_CODE>#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool)</SEQ1_EMISSIVE_CODE>
					<SEQ2_EMISSIVE_CODE>#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool) !</SEQ2_EMISSIVE_CODE>
					<TOOLTIPID>%(#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool) !)%{if}TT:#OFF_TOOLTIP#%{else}TT:#ON_TOOLTIP#%{end}</TOOLTIPID>
				</Case>
				<Default>
					<IS_AIRLINER>False</IS_AIRLINER>
				</Default>
			</Switch>
		</OverrideTemplateParameters>
		
		<Condition Check="IS_AIRLINER" Match="True">
			<True>
				<UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
				</UseTemplate>
			</True>
			<False>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Push_Button">
					</UseTemplate>
				</Component>
			</False>
		</Condition>
	</Template>
   <Template Name="DD_BOEING_Knob_StandbyPower_Template">
		<Parameters Type="Default">
			<ARROW_TYPE>Curved</ARROW_TYPE>
			<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
			<SWITCH_POSITION_VAR>XMLVAR_StandbyPower_Selector</SWITCH_POSITION_VAR>
			<PART_ID>BOEING_StandbyPower_Selector</PART_ID>
			<WWISE_PREFIX>standbypower_selector</WWISE_PREFIX>
			<TOOLTIP_TITLE>@TT_Package.AIRLINER_KNOB_STANDBY_SELECTOR_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_KNOB_STANDBY_SELECTOR_ACTION</TT_DESCRIPTION_ID>
			<POS_OFF>0</POS_OFF>
			<POS_AUTO>1</POS_AUTO>
			<POS_BAT>2</POS_BAT>
		</Parameters>
		<UseTemplate Name="ASOBO_AIRLINER_Base_Template">
			<IE_NAME>Standby_Power_Selector</IE_NAME>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
			<KNOB_TYPE>X_STATES</KNOB_TYPE>
			<NUM_STATES>3</NUM_STATES>
			<STR_STATE_#POS_OFF#>Off</STR_STATE_#POS_OFF#>
			<STR_STATE_#POS_AUTO#>Auto</STR_STATE_#POS_AUTO#>
			<STR_STATE_#POS_BAT#>Battery</STR_STATE_#POS_BAT#>
			<TT_VALUE_#POS_OFF#>@TT_Package.GT_STATE_OFF</TT_VALUE_#POS_OFF#>
			<TT_VALUE_#POS_AUTO#>@TT_Package.GT_STATE_AUTO</TT_VALUE_#POS_AUTO#>
			<TT_VALUE_#POS_BAT#>@TT_Package.GT_STATE_BATTERY</TT_VALUE_#POS_BAT#>
			<SET_STATE_#POS_OFF#>
				#BATTERY_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#MAIN_BUS_ID#, Bool) if{
					#BATTERY_BUS_ID# #MAIN_BUS_ID# (&gt;K:1:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
				} 0 (&gt;L:XMLVAR_STANDBY_POWER_IS_ON_BAT)
			</SET_STATE_#POS_OFF#>
			<SET_STATE_#POS_AUTO#>
				#BATTERY_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#MAIN_BUS_ID#, Bool) ! if{
					#BATTERY_BUS_ID# #MAIN_BUS_ID# (&gt;K:1:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
				} 0 (&gt;L:XMLVAR_STANDBY_POWER_IS_ON_BAT)
			</SET_STATE_#POS_AUTO#>
			<SET_STATE_#POS_BAT#>
				#BATTERY_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#MAIN_BUS_ID#, Bool) ! if{
					#BATTERY_BUS_ID# #MAIN_BUS_ID# (&gt;K:1:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
				} 1 (&gt;L:XMLVAR_STANDBY_POWER_IS_ON_BAT)
			</SET_STATE_#POS_BAT#>
			<GET_STATE_EXTERNAL>#BATTERY_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#MAIN_BUS_ID#, Bool) sp0 (L:XMLVAR_STANDBY_POWER_IS_ON_BAT) sp1</GET_STATE_EXTERNAL>
			<ENUM_VAL_TO_POS_EXTERNAL>l0 ! if{ #POS_OFF# sp2 g2 } els{ #POS_BAT# #POS_AUTO# l1 ? sp2 g2 } :2 l2</ENUM_VAL_TO_POS_EXTERNAL>
		</UseTemplate>
	</Template>
    
    <Template Name="DD_AUTOPILOT_Push_FlightDirector_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<FD_TOGGLE_CONDITION>1</FD_TOGGLE_CONDITION>
		</Parameters>
		<Parameters Type="Default">
			<DEFAULT_NAME>FlightDirector</DEFAULT_NAME>
			<Condition Check="TOGGLEABLE">
				<True>
					<ANIM_CODE>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) 100 *</ANIM_CODE>
				</True>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<LEFT_SINGLE_CODE> (&gt;B:AUTOPILOT_FD_1_Mode_Toggle) (&gt;H:B747_8_FMC_1_AP_FD_TOGGLE)</LEFT_SINGLE_CODE>
			<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#</EMISSIVE_SIMVAR_ACTIVE>
			<SIMVAR_TO_WATCH_0>AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#</SIMVAR_TO_WATCH_0>
			<Condition Valid="ON_WHEN_AP_MODE_TURNED_ON">
				<SIMVAR_TO_WATCH_1>AUTOPILOT MASTER</SIMVAR_TO_WATCH_1>
				<GET_INIT_STATE_EXTERNAL>
					(A:AUTOPILOT MASTER, Bool) (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) or sp0
					l0 (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) ! and if{ #ID# (&gt;K:TOGGLE_FLIGHT_DIRECTOR) } l0
				</GET_INIT_STATE_EXTERNAL>
				<ON_STATE_CHANGED_NEW_STATE_TO_POS_EXTERNAL>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool)</ON_STATE_CHANGED_NEW_STATE_TO_POS_EXTERNAL>
			</Condition>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:#ID#, Bool) sp0</GET_STATE_EXTERNAL>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<SET_STATE_EXTERNAL>#FD_TOGGLE_CONDITION# if{ #ID# (&gt;K:TOGGLE_FLIGHT_DIRECTOR)}</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_FLIGHTDIRECTOR_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_FLIGHTDIRECTOR_TITLE</TOOLTIP_TITLE>
			<BTN_ID>FD_#ID#_Mode</BTN_ID>
		</UseTemplate>
	</Template>

	<Template Name="DD_AUTOPILOT_Push_Localizer_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Localizer</DEFAULT_NAME>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<EMISSIVE_CODE_ACTIVE>(L:AP_LOC_ARMED, Bool) (L:AP_APP_ARMED, Bool) ! and</EMISSIVE_CODE_ACTIVE>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and sp0</GET_STATE_EXTERNAL>
			<!-- To APPROACH and LOCALIZER are the same as far as toggling, so has to toggle twice if already active from other mode -->
			<SET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and if{ (&gt;H:B747_8_FMC_1_AP_LOC_ARMED) } (&gt;H:B747_8_FMC_1_AP_LOC_ARMED)</SET_STATE_EXTERNAL>
			<BTN_ID>Localizer_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_LOC_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_LOC_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>
    <Template Name="DD_AUTOPILOT_Push_Approach_Template">
		<Parameters Type="Default">
			<MAX_BANK_DEGREES>30</MAX_BANK_DEGREES>
			<DEFAULT_NAME>Approach</DEFAULT_NAME>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="DISABLE_GPS_MODE">
				<True>
					<GPS_DISABLE_CODE>(A:GPS DRIVES NAV1, Bool) if{ (A:GPS APPROACH APPROACH TYPE, Enum) 4 == if{ (&gt;K:TOGGLE_GPS_DRIVES_NAV1) } } els{ (A:GPS APPROACH APPROACH TYPE, Enum) 10 == if{ (&gt;K:TOGGLE_GPS_DRIVES_NAV1) } }</GPS_DISABLE_CODE>
				</True>
				<False> 
					<GPS_DISABLE_CODE/>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<EMISSIVE_CODE_ACTIVE>(L:AP_APP_ARMED, Bool)</EMISSIVE_CODE_ACTIVE>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#GPS_DISABLE_CODE# (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (&gt;H:B747_8_FMC_1_AP_APP_ARMED) } (&gt;H:B747_8_FMC_1_AP_APP_ARMED)</SET_STATE_EXTERNAL>
			<BTN_ID>Approach_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_APPROACH_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_APPROACH_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="DD_AUTOPILOT_Push_Vertical_Navigation_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>VerticalNavigation</DEFAULT_NAME>
			<ON_VNAV_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B747">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B747_8</KEY_PREFIX>
				</Case>
				<Default>
					<EMISSIVE_DEFAULT_NAME>AUTOPILOT_Push_VerticalNavigation_Text</EMISSIVE_DEFAULT_NAME>
				</Default>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_VNAV_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:WT_CJ4_VNAV_ON)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_VNAV_ARMED)</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_VNAV)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(L:XMLVAR_VNAVButtonValue) ! (&gt;L:XMLVAR_VNAVButtonValue)</SET_STATE_EXTERNAL>
					<EMISSIVE_CODE_ACTIVE>(L:XMLVAR_VNAVButtonValue)</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(L:XMLVAR_VNAVButtonValue)</IS_SWITCH_ON>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>VNAV_Mode</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_VERTICALNAVIGATION_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_VERTICALNAVIGATION_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="DD_AUTOPILOT_Push_FlightLevelChange_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>FlightLevelChange</DEFAULT_NAME>
			<ON_FLC_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B747">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B747_8</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_FLC_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_FLCH_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_FLCH_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_FLCH)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (&gt;K:AP_SPD_VAR_SET)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT FLIGHT LEVEL CHANGE</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT FLIGHT LEVEL CHANGE</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>FLC_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_FLIGHTLEVELCHANGE_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_FLIGHTLEVELCHANGE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="DD_AUTOPILOT_Push_VerticalSpeed_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>VerticalSpeed</DEFAULT_NAME>
			<ON_VS_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B747">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B747_8</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_VS_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_VS_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_VS_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_VSPEED)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_PANEL_VS_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT VERTICAL HOLD, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT VERTICAL HOLD</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT VERTICAL HOLD</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>VS_Mode</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_VERTICALSPEED_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_VERTICALSPEED_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

<Template Name="DD_AUTOPILOT_Push_Altitude_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Altitude</DEFAULT_NAME>
			<ON_ALTITUDE_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B747">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B747_8</KEY_PREFIX>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_ALTITUDE_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<IS_SWITCH_ON>(L:AP_ALT_HOLD_ACTIVE)</IS_SWITCH_ON>
					<EMISSIVE_CODE_ACTIVE>(L:AP_ALT_HOLD_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_ALT_HOLD)</SET_STATE_EXTERNAL>
				</True>
				<False>
					<SET_STATE_EXTERNAL>(&gt;K:AP_ALT_HOLD)</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT ALTITUDE LOCK, Bool)</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT ALTITUDE LOCK</SIMVAR_TO_WATCH_0>
					<EMISSIVE_SIMVAR_ACTIVE>AUTOPILOT ALTITUDE LOCK</EMISSIVE_SIMVAR_ACTIVE>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
			<BTN_ID>Altitude_Button</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_ALTITUDE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Template>

	<Template Name="DD_AUTOPILOT_Push_Speed_Template">
		<Parameters Type="Default">
			<DEFAULT_NAME>Speed</DEFAULT_NAME>
			<IS_MACH_CODE>0</IS_MACH_CODE>
			<ON_SPEED_MODE_SWITCH/>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="TYPE">
				<Case Value="B747">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>B747_8</KEY_PREFIX>
					<EMISSIVE_CODE_ACTIVE>(L:AP_SPD_ACTIVE) (L:WT_CJ4_VNAV_ON) ! and</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(L:AP_SPD_ACTIVE)</IS_SWITCH_ON>
				</Case>
				<Case Value="AS01B">
					<IS_USING_L_VAR_FOR_STATE>True</IS_USING_L_VAR_FOR_STATE>
					<KEY_PREFIX>AS01B</KEY_PREFIX>
					<EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT THROTTLE ARM, Bool) (A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or and</EMISSIVE_CODE_ACTIVE>
					<IS_SWITCH_ON>(A:AUTOPILOT THROTTLE ARM, Bool) (A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or and</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT AIRSPEED HOLD</SIMVAR_TO_WATCH_0>
					<SIMVAR_TO_WATCH_1>AUTOPILOT MACH HOLD</SIMVAR_TO_WATCH_1>
					<SIMVAR_TO_WATCH_2>AUTOPILOT THROTTLE ARM</SIMVAR_TO_WATCH_2>
				</Case>
			</Switch>
			<ON_AP_MODE_STATE_CHANGED>#ON_SPEED_MODE_SWITCH#</ON_AP_MODE_STATE_CHANGED>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="IS_USING_L_VAR_FOR_STATE">
				<True>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMC_1_AP_SPD)</SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID>@TT_Package.AIRLINER_AUTOPILOT_PUSH_SPEED_ACTION</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AIRLINER_AUTOPILOT_PUSH_SPEED_TITLE</TOOLTIP_TITLE>
					<BTN_ID>IAS_Mode</BTN_ID>
				</True>
				<False>
					<SET_STATE_EXTERNAL>#IS_MACH_CODE# if{ (&gt;K:AP_PANEL_MACH_HOLD) } els{ (&gt;K:AP_PANEL_SPEED_HOLD) }</SET_STATE_EXTERNAL>
					<IS_SWITCH_ON>(A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or</IS_SWITCH_ON>
					<SIMVAR_TO_WATCH_0>AUTOPILOT AIRSPEED HOLD</SIMVAR_TO_WATCH_0>
					<SIMVAR_TO_WATCH_1>AUTOPILOT MACH HOLD</SIMVAR_TO_WATCH_1>
					<EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT AIRSPEED HOLD, Bool) (A:AUTOPILOT MACH HOLD, Bool) or</EMISSIVE_CODE_ACTIVE>
					<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_ACTION_SET</TT_DESCRIPTION_ID>
					<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
					<TOOLTIP_TITLE>@TT_Package.AUTOPILOT_PUSH_SPEEDMODE_TITLE</TOOLTIP_TITLE>
					<BTN_ID>Speed_Mode</BTN_ID>
				</False>
			</Condition>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
			<GET_STATE_EXTERNAL>#IS_SWITCH_ON# sp0</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>#SET_STATE_EXTERNAL# #ON_AP_MODE_STATE_CHANGED#</SET_STATE_EXTERNAL>
		</UseTemplate>
	</Template>

	<Template Name="DD_ENGINE_Switch_Hydraulic_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="DD_ENGINE_Switch_Hydraulic_SubTemplate">
	</UseTemplate>
	</Template>

<Template Name="DD_ENGINE_Switch_Hydraulic_SubTemplate">
	<DefaultTemplateParameters>
	    <SEQ_POWERED>1</SEQ_POWERED>
        <SEQ1_POWERED>1</SEQ1_POWERED>
    	<SEQ2_POWERED>1</SEQ2_POWERED>
		<NODE_ID>ENGINE_Switch_Hydraulic</NODE_ID>
		<ANIM_NAME>ENGINE_Switch_Hydraulic</ANIM_NAME>
		<PART_ID>ENGINE_Switch_Hydraulic</PART_ID>
		<IS_AIRLINER>true</IS_AIRLINER>
		<PRESS_WARNING_THRESHOLD_PSI>150</PRESS_WARNING_THRESHOLD_PSI>
    	<EMISSIVE_DIM>(L:DD_OVHD_INTLT_ANN, number) 2 == if{ 0.1 } els{ 1 }</EMISSIVE_DIM>
	</DefaultTemplateParameters>
	<Condition Valid="IS_AIRLINER">
		<True>
			<UseTemplate Name="DD_GT_Push_Button_Airliner">
				<Switch Param="AIRLINER_TYPE">
					<Default>
						<SEQ_POWERED>(ELECTRICAL MASTER BATTERY:1, Bool)</SEQ_POWERED>
						<LEFT_SINGLE_CODE>#ID# (&gt;K:1:HYDRAULIC_SWITCH_TOGGLE)</LEFT_SINGLE_CODE>
						<SEQ1_EMISSIVE_CODE>(A:HYDRAULIC SWITCH:#ID#, Bool)</SEQ1_EMISSIVE_CODE>
						<SEQ2_EMISSIVE_CODE>(A:HYDRAULIC PRESSURE:#ID#, psi) #PRESS_WARNING_THRESHOLD_PSI# (A:HYDRAULIC RESERVOIR PERCENT:#ID#, percent over 100) 1 &lt; and</SEQ2_EMISSIVE_CODE>
					</Default>
				</Switch>
			</UseTemplate>
		</True>
	</Condition>
</Template>

	<Template Name = "DD_GT_Push_Button_Airliner">
	<DefaultTemplateParameters>
		<SEQ1_SUFFIX>_SEQ1</SEQ1_SUFFIX>
		<SEQ2_SUFFIX>_SEQ2</SEQ2_SUFFIX>
	</DefaultTemplateParameters>
	
	<UseTemplate Name="DD_GT_Push_Button_Airliner_SubTemplate">
	</UseTemplate>

</Template>

<Template Name = "DD_GT_Push_Button_Airliner_SubTemplate">
	<Parameters Type="Default">
		<Condition Check="POTENTIOMETER">
			<True>
				<POTENTIOMETER_SEQ1>#POTENTIOMETER#</POTENTIOMETER_SEQ1>
				<POTENTIOMETER_SEQ2>#POTENTIOMETER#</POTENTIOMETER_SEQ2>
			</True>
		</Condition>
		<Condition Check="SIMVAR_POWER_SETTING">
			<True>
				<SIMVAR_POWER_SETTING_SEQ1>#SIMVAR_POWER_SETTING#</SIMVAR_POWER_SETTING_SEQ1>
				<SIMVAR_POWER_SETTING_SEQ2>#SIMVAR_POWER_SETTING#</SIMVAR_POWER_SETTING_SEQ2>
			</True>
		</Condition>
		<SEQ1_EMISSIVE_CODE>1</SEQ1_EMISSIVE_CODE>
		<SEQ2_EMISSIVE_CODE>1</SEQ2_EMISSIVE_CODE>
		<SEQ1_NODE_ID>#NODE_ID##SEQ1_SUFFIX#</SEQ1_NODE_ID>
		<SEQ2_NODE_ID>#NODE_ID##SEQ2_SUFFIX#</SEQ2_NODE_ID>
		<Condition Check="ONLY_SEQ1">
			<NO_SEQ2/>
		</Condition>
		<Condition Check="ONLY_SEQ2">
			<NO_SEQ1/>
		</Condition>
		<SEQ1_EMISSIVE_DRIVES_VISIBILITY>True</SEQ1_EMISSIVE_DRIVES_VISIBILITY>
		<SEQ2_EMISSIVE_DRIVES_VISIBILITY>True</SEQ2_EMISSIVE_DRIVES_VISIBILITY>
		<SEQ1_CODE_DRIVES_VISIBILITY>False</SEQ1_CODE_DRIVES_VISIBILITY>
		<SEQ2_CODE_DRIVES_VISIBILITY>False</SEQ2_CODE_DRIVES_VISIBILITY>
		<Condition Check="NOT_DIMMABLE">
			<True>
				<SEQ1_NOT_DIMMABLE>#NOT_DIMMABLE#</SEQ1_NOT_DIMMABLE>
				<SEQ2_NOT_DIMMABLE>#NOT_DIMMABLE#</SEQ2_NOT_DIMMABLE>
			</True>
			<False>
				<SEQ1_NOT_DIMMABLE>False</SEQ1_NOT_DIMMABLE>
				<SEQ2_NOT_DIMMABLE>False</SEQ2_NOT_DIMMABLE>
			</False>
		</Condition>
		<IS_SWITCH>False</IS_SWITCH>
	</Parameters>
	<Parameters Type="Default">
		<Condition Check="COVER_NODE_ID">
			<COVER_INIT_VALUE>0</COVER_INIT_VALUE>
			<COVER_IE_NAME>#NODE_ID#_Cover</COVER_IE_NAME>
			<Condition NotEmpty="INPUT_EVENT_ID">
				<True>
					<COVER_IE_ID_SOURCE>#INPUT_EVENT_ID#</COVER_IE_ID_SOURCE>
				</True>
				<False>
					<COVER_IE_ID_SOURCE>COMMON</COVER_IE_ID_SOURCE>					
				</False>
			</Condition>
			<COVER_USE_INPUT_EVENT>COMMON</COVER_USE_INPUT_EVENT>
			<COVER_INVERT_SWITCH_ON_CONDITION>False</COVER_INVERT_SWITCH_ON_CONDITION>
			<COVER_INVERT_WHEEL_INTERACTION>False</COVER_INVERT_WHEEL_INTERACTION>
			<TT_DESCRIPTION_ID_COVER>@TT_Package.COMMON_COVER_ACTION</TT_DESCRIPTION_ID_COVER>
			<TOOLTIP_TITLE_COVER>@TT_Package.COMMON_COVER_TITLE</TOOLTIP_TITLE_COVER>
			<ON_COVER_OPENED/>
			<ON_COVER_CLOSED/>
			<TT_ICON_COVER>MOVE_Y</TT_ICON_COVER>
			<NO_INTERACTION_WHEN_COVERED>True</NO_INTERACTION_WHEN_COVERED>
		</Condition>
	</Parameters>
	<Parameters Type="Default">
		<Condition Check="COVER_NODE_ID">
			<IS_COVER_OPENED>(B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#, Bool)</IS_COVER_OPENED>
			<COVER_VAR_NAME>#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Position</COVER_VAR_NAME>
			<COVER_VAR_TYPE>O</COVER_VAR_TYPE>
			<WWISE_COVER_EVENT_OPEN>cover_open</WWISE_COVER_EVENT_OPEN>
			<WWISE_COVER_EVENT_CLOSE>cover_close</WWISE_COVER_EVENT_CLOSE>
		</Condition>
	</Parameters>
	<Parameters Type="Override">
		<Condition Check="DOWN_STATE_CODE">
			<False>
				<Condition Valid="SEQ1_CODE_DRIVES_DOWN_STATE">
					<True>
						<DOWN_STATE_CODE>#SEQ1_EMISSIVE_CODE#</DOWN_STATE_CODE>
					</True>
				</Condition>
				<Condition Valid="SEQ2_CODE_DRIVES_DOWN_STATE">
					<True>
						<DOWN_STATE_CODE>#SEQ2_EMISSIVE_CODE#</DOWN_STATE_CODE>
					</True>
				</Condition>
			</False>
		</Condition>
	</Parameters>
	<EditableTemplateParameters>
		<AddParams>
			<SEQ1_NODE_ID></SEQ1_NODE_ID>
			<SEQ2_NODE_ID></SEQ2_NODE_ID>
		</AddParams>
	</EditableTemplateParameters>

	<Condition Check="DUMMY_BUTTON">
		<False>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Parameters Type="Default">
					<Switch>
						<Case Valid="HAS_LONG_PRESS">
							<PUSH_TEMPLATE_TO_USE>ASOBO_GT_Push_Button_Timed</PUSH_TEMPLATE_TO_USE>
						</Case>
						<Default>
							<PUSH_TEMPLATE_TO_USE>ASOBO_GT_Push_Button</PUSH_TEMPLATE_TO_USE>
						</Default>
					</Switch>
				</Parameters>
				<Parameters Type="Override">
					<Condition Check="COVER_NODE_ID">
						<True>
							<LEFT_SINGLE_CODE>(B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#, Bool) if{ #LEFT_SINGLE_CODE# }</LEFT_SINGLE_CODE>
						</True>
					</Condition>
				</Parameters>
				<Condition Check="INPUT_EVENT_ID">
					<UseInputEvent ID="#INPUT_EVENT_ID#"/>					
				</Condition>
				<Condition Check="DOWN_STATE_CODE">
					<True>
						<UseTemplate Name = "ASOBO_GT_Switch_Code">
							<ANIM_CODE>#DOWN_STATE_CODE# 100 *</ANIM_CODE>
						</UseTemplate>
					</True>
					<False>
						<UseTemplate Name="#PUSH_TEMPLATE_TO_USE#"/>
					</False>
				</Condition>
			</Component>
			
			<Condition Check="COVER_NODE_ID">
				<True>
					<Component ID="#COVER_NODE_ID#" Node="#COVER_NODE_ID#">
						<Parameters Type="Override">
							<Condition NotEmpty="INVERT_COVER_ANIM">
								<INVERT_ANIM>#INVERT_COVER_ANIM#</INVERT_ANIM>
							</Condition>
							<INVERT_SWITCH_ON_CONDITION>#COVER_INVERT_SWITCH_ON_CONDITION#</INVERT_SWITCH_ON_CONDITION>
							<INVERT_WHEEL_INTERACTION>#COVER_INVERT_WHEEL_INTERACTION#</INVERT_WHEEL_INTERACTION>
							<ON_STATE_CHANGED_EXTERNAL_CODE/>
						</Parameters>
						<Condition NotEmpty="OPEN_COVER_CONDITION">
							<UseTemplate Name="ASOBO_GT_Update">
								<FREQUENCY>5</FREQUENCY>
								<UPDATE_CODE>#OPEN_COVER_CONDITION# != if{ (&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Open) }</UPDATE_CODE>
							</UseTemplate>
						</Condition>
						<UseTemplate Name="ASOBO_GT_Update">
							<UPDATE_ONCE>True</UPDATE_ONCE>
							<UPDATE_CODE>#COVER_INIT_VALUE# (&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Set)</UPDATE_CODE>
						</UseTemplate>
						<UseInputEvent ID="#COVER_USE_INPUT_EVENT#">
							<BTN_ID>#COVER_IE_NAME#</BTN_ID>
							<INPUT_EVENT_ID_SOURCE>#COVER_IE_ID_SOURCE#</INPUT_EVENT_ID_SOURCE>
							<TT_ICON>#TT_ICON_COVER#</TT_ICON>
							<Condition Check="NUM_STATES" Match="3">
								<True>
									<SET_STATE_1>1 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_OPENED#</SET_STATE_1>
									<SET_STATE_0>0 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_CLOSED#</SET_STATE_0>
									<SET_STATE_2/>
								</True>
								<False>
									<SET_STATE_ON>1 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_OPENED#</SET_STATE_ON>
									<SET_STATE_OFF>0 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_CLOSED#</SET_STATE_OFF>
								</False>
							</Condition>
							<ON_BEFORE_INC_CODE/>
							<ON_BEFORE_DEC_CODE/>
							<ON_BEFORE_SET_CODE/>
							<ON_AFTER_INC_CODE/>
							<ON_AFTER_DEC_CODE/>
							<ON_AFTER_SET_CODE/>
							<GET_STATE_EXTERNAL>(#COVER_VAR_TYPE#:#COVER_VAR_NAME#) sp0</GET_STATE_EXTERNAL>
							<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
							<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_COVER#</TT_DESCRIPTION_ID>
							<STR_STATE_OFF>Close</STR_STATE_OFF>
							<STR_STATE_ON>Open</STR_STATE_ON>
							<TT_VALUE_OFF>@TT_Closed</TT_VALUE_OFF>
							<TT_VALUE_ON>@TT_Open</TT_VALUE_ON>
							<NUM_STATES>2</NUM_STATES>
							<SIMVAR_TO_WATCH_0/>
							<LOCAL_VAR_TO_WATCH_0/>
						</UseInputEvent>
						<UseTemplate Name="ASOBO_GT_Switch_Code">
							<TOOLTIP_TITLE>#TOOLTIP_TITLE_COVER#</TOOLTIP_TITLE>
							<TOOLTIP_ENTRY_0>#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#</TOOLTIP_ENTRY_0>
							<ANIM_NAME>#COVER_ANIM_NAME#</ANIM_NAME>
							<ANIM_CODE>#IS_COVER_OPENED# 100 *</ANIM_CODE>
							<LEFT_SINGLE_CODE>(&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Toggle)</LEFT_SINGLE_CODE>
							<WWISE_EVENT_1>#WWISE_COVER_EVENT_OPEN#</WWISE_EVENT_1>
							<WWISE_EVENT_2>#WWISE_COVER_EVENT_CLOSE#</WWISE_EVENT_2>
						</UseTemplate>
					</Component>
				</True>
			</Condition>
		</False>
		<True>
			<Condition Valid="IS_INOP">
				<True>
					<UseTemplate Name="ASOBO_GT_Interaction_Tooltip">
						<Condition>
							<Test>
								<And>
									<Arg Check="DOWN_STATE_CODE"/>
									<Arg Check="ANIM_NAME"/>
								</And>
							</Test>
							<True>
								<ANIM_POS>#DOWN_STATE_CODE# 100 *</ANIM_POS>
							</True>
						</Condition>
					</UseTemplate>
				</True>
			</Condition>
		</True>
	</Condition>
	
	<Condition Check="NO_SEQ1">
		<False>
			<Component ID="#SEQ1_NODE_ID#_S1" Node="#SEQ1_NODE_ID#">
				<UseTemplate Name ="ASOBO_GT_Emissive_Gauge">
					<Condition NotEmpty="SEQ1_FAILURE">
						<FAILURE>#SEQ1_FAILURE#</FAILURE>
					</Condition>
					<Switch>
						<Case Valid="SEQ1_NOT_DIMMABLE">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="POTENTIOMETER_SEQ1">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE# (A:LIGHT POTENTIOMETER:#POTENTIOMETER_SEQ1#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="SIMVAR_POWER_SETTING_SEQ1">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE# (A:#SIMVAR_POWER_SETTING_SEQ1#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Default>
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Default>
					</Switch>
					<Condition Valid="SEQ1_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
					<Condition Valid="SEQ1_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
				</UseTemplate>
				<Condition Valid="SEQ1_CODE_DRIVES_VISIBILITY">
					<True>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#SEQ1_EMISSIVE_CODE# 0 &gt;</VISIBILITY_CODE>
						</UseTemplate>
					</True>
				</Condition>
			</Component>
		</False>
	</Condition>
	
	<Condition Check="NO_SEQ2">
		<False>
			<Component ID="#SEQ2_NODE_ID#_S2" Node="#SEQ2_NODE_ID#">
				<UseTemplate Name ="ASOBO_GT_Emissive_Gauge">
					<Condition NotEmpty="SEQ2_FAILURE">
						<FAILURE>#SEQ2_FAILURE#</FAILURE>
					</Condition>
					<Switch>
						<Case Valid="SEQ2_NOT_DIMMABLE">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="POTENTIOMETER_SEQ2">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE# (A:LIGHT POTENTIOMETER:#POTENTIOMETER_SEQ2#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="SIMVAR_POWER_SETTING_SEQ2">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE# (A:#SIMVAR_POWER_SETTING_SEQ2#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Default>
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Default>
					</Switch>
					<Condition Valid="SEQ2_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
					<Condition Valid="SEQ2_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
				</UseTemplate>
				<Condition Valid="SEQ2_CODE_DRIVES_VISIBILITY">
					<True>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#SEQ2_EMISSIVE_CODE# 0 &gt;</VISIBILITY_CODE>
						</UseTemplate>
					</True>
				</Condition>
			</Component>
		</False>
	</Condition>
</Template>

<Template Name="DD_ELECTRICAL_Switch_Bus_SubTemplate">
		<DefaultTemplateParameters>
			<NODE_ID>ELECTRICAL_Switch_Bus_#ID#</NODE_ID>
			<ANIM_NAME>ELECTRICAL_Switch_Bus_#ID#</ANIM_NAME>
			<PART_ID>ELECTRICAL_Switch_Bus</PART_ID>
			<WWISE_EVENT_1>bus_tie_switch_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>bus_tie_switch_off</WWISE_EVENT_2>
			<AUDIO_NORMALIZED_TIME_1>0.1</AUDIO_NORMALIZED_TIME_1>
			<AUDIO_NORMALIZED_TIME_2>0.5</AUDIO_NORMALIZED_TIME_2>
			<ON_TOOLTIP></ON_TOOLTIP>
			<OFF_TOOLTIP></OFF_TOOLTIP>
		</DefaultTemplateParameters>
		<OverrideTemplateParameters>
			<LEFT_SINGLE_CODE>#SOURCE_ID# #ID# (&gt;K:1:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)</LEFT_SINGLE_CODE>
			<Switch Param="TYPE">
				<Case Value="BOEING">
					<IS_AIRLINER>True</IS_AIRLINER>
					<SEQ1_EMISSIVE_CODE>#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool)</SEQ1_EMISSIVE_CODE>
					<SEQ2_EMISSIVE_CODE>#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool) !</SEQ2_EMISSIVE_CODE>
					<TOOLTIPID>%(#SOURCE_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:#ID#, Bool) !)%{if}TT:#OFF_TOOLTIP#%{else}TT:#ON_TOOLTIP#%{end}</TOOLTIPID>
				</Case>
				<Default>
					<IS_AIRLINER>False</IS_AIRLINER>
				</Default>
			</Switch>
		</OverrideTemplateParameters>
		
		<Condition Check="IS_AIRLINER" Match="True">
			<True>
				<UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
				</UseTemplate>
			</True>
			<False>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Push_Button">
					</UseTemplate>
				</Component>
			</False>
		</Condition>
	</Template>

	<Template Name="DD_ELECTRICAL_Push_ExternalPower_Template">
		<Parameters Type="Default">
			<ID>1</ID>
			<INTERACTION_TYPE>PUSH</INTERACTION_TYPE>
		</Parameters>
		<UseTemplate Name="DD_ELECTRICAL_ExternalPower_Template">
		</UseTemplate>
	</Template>

	<Template Name="DD_ELECTRICAL_ExternalPower_Template">
		<Parameters Type="Default">
			<PART_ID>ELECTRICAL_Switch_ExternalPower</PART_ID>
			<ANIM_NAME>ELECTRICAL_Switch_ExternalPower_#ID#</ANIM_NAME>
			<NODE_ID>ELECTRICAL_Switch_ExternalPower_#ID#</NODE_ID>
			<Switch Param="INTERACTION_TYPE">
				<Case Value="PUSH">
					<Switch Param="TYPE">
						<Case Value="AIRBUS">
						</Case>
						<Case Value="BOEING">
							<SWAP_SEQ_CONDITION>False</SWAP_SEQ_CONDITION>
						</Case>
					</Switch>
				</Case>
				<Case Value="SWITCH">
					<Switch Param="NUM_STATES">
						<Case Value="3">
							<COVER_NODE_ID>ELECTRICAL_Switch_ExternalPower_#ID#_Cover</COVER_NODE_ID>
							<COVER_ANIM_NAME>ELECTRICAL_Switch_ExternalPower_#ID#_Cover</COVER_ANIM_NAME>
							<GET_STATE_EXTERNAL>
								12 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:1, Bool) sp1
								12 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:11, Bool) sp2
								1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:11, Bool) sp3
							</GET_STATE_EXTERNAL>
							<SET_EXTPWR_MAIN_BUS_CONNECTION>l1 != if{ 1 12 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }</SET_EXTPWR_MAIN_BUS_CONNECTION>
							<SET_EXTPWR_STARTER_CONNECTION>l2 != if{ 11 12 (&gt;K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }</SET_EXTPWR_STARTER_CONNECTION>
							<SET_STARTER_MAIN_BUS_CONNECTION>l3 != if{ 11 1 (&gt;K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }</SET_STARTER_MAIN_BUS_CONNECTION>
						</Case>
					</Switch>
				</Case>
			</Switch>
			<POST_CLICK_CODE></POST_CLICK_CODE>
			<EXTPWR_ID>#ID#</EXTPWR_ID>
			<TOOLTIP_EXTPWR_TITLE>@TT_Package.ELECTRICAL_SWITCH_EXTERNAL_POWER_TITLE</TOOLTIP_EXTPWR_TITLE>
		</Parameters>
		<Parameters Type="Override">
			<TOOLTIP_TITLE>#TOOLTIP_EXTPWR_TITLE#</TOOLTIP_TITLE>
			<TOOLTIP_ENTRY_0>ELECTRICAL_ExternalPower_#ID#</TOOLTIP_ENTRY_0>
			<Switch Param="INTERACTION_TYPE">
				<Case Value="PUSH">
					<LEFT_SINGLE_CODE>(&gt;B:ELECTRICAL_ExternalPower_#EXTPWR_ID#_Toggle)</LEFT_SINGLE_CODE>
					<WWISE_EVENT_1>externalpower_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>externalpower_push_button_off</WWISE_EVENT_2>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					<Switch Param="TYPE">
						<Case Value="AIRBUS">
							<SEQ1_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (A:EXTERNAL POWER ON:#ID#, Bool) ! and</SEQ1_EMISSIVE_CODE>
							<SEQ2_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (A:EXTERNAL POWER ON:#ID#, Bool) and</SEQ2_EMISSIVE_CODE>
						</Case>
						<Case Value="BOEING">
							<ON_STATE_CHANGED>
								#POST_CLICK_CODE# 
								(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (A:EXTERNAL POWER ON:#ID#, Bool) and if{
									(A:EXTERNAL POWER ON:#ID#, Bool) if{ #ID# 0 (&gt;K:2:APU_GENERATOR_SWITCH_SET) } 
								}
							</ON_STATE_CHANGED>
							<DOWN_STATE_CODE>(B:ELECTRICAL_ExternalPower_#EXTPWR_ID#)</DOWN_STATE_CODE>
							<Switch Param="VARIANT">
								<Case Value="747">
									<SEQ1_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (B:ELECTRICAL_ExternalPower_#EXTPWR_ID#) ! and</SEQ1_EMISSIVE_CODE>
									<SEQ2_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (B:ELECTRICAL_ExternalPower_#EXTPWR_ID#) (K:ELECTRICAL_BUS_TO_EXTERNAL_POWER_CONNECTION_TOGGLE:#ID#) and</SEQ2_EMISSIVE_CODE>
								</Case>
								<Default>
									<SEQ1_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (B:ELECTRICAL_ExternalPower_#EXTPWR_ID#) and</SEQ1_EMISSIVE_CODE>
									<SEQ2_EMISSIVE_CODE>(A:EXTERNAL POWER AVAILABLE:#ID#, Bool) (B:ELECTRICAL_ExternalPower_#EXTPWR_ID#) ! and</SEQ2_EMISSIVE_CODE>
								</Default>
							</Switch>
						</Case>
					</Switch>
				</Case>
				<Case Value="SWITCH">
					<Switch Param="NUM_STATES">
						<Case Value="2">
							<LEFT_SINGLE_CODE>(&gt;B:ELECTRICAL_ExternalPower_#EXTPWR_ID#_Toggle)</LEFT_SINGLE_CODE>
							<ANIM_CODE>(B:ELECTRICAL_ExternalPower_#EXTPWR_ID#) 100 *</ANIM_CODE>
							<WWISE_EVENT_1>externalpower_switch_on</WWISE_EVENT_1>
							<WWISE_EVENT_2>externalpower_switch_off</WWISE_EVENT_2>
						</Case>
						<Case Value="3">
							<SWITCH_NODE_ID>#NODE_ID#</SWITCH_NODE_ID>
							<SWITCH_ANIM_NAME>#ANIM_NAME#</SWITCH_ANIM_NAME>
							<COVER_VAR_NAME>XMLVAR_ELECTRICAL_ExternalPower_#EXTPWR_ID#_Cover_Opened</COVER_VAR_NAME>
							<WWISE_EVENT>externalpower_switch</WWISE_EVENT>
							<BTN_ID>ExternalPower_#EXTPWR_ID#</BTN_ID>
							<EXTPWR_ID/>
						</Case>
					</Switch>
				</Case>
			</Switch>
		</Parameters>
		
		<Switch Param="INTERACTION_TYPE">
			<Case Value="PUSH">
				<UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
					<INPUT_EVENT_ID>ELECTRICAL</INPUT_EVENT_ID>
					<Condition Valid="SWAP_SEQ_CONDITION">
						<SEQ1_EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE#</SEQ1_EMISSIVE_CODE>
						<SEQ2_EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE#</SEQ2_EMISSIVE_CODE>
					</Condition>
				</UseTemplate>
			</Case>
			<Case Value="SWITCH">
				<Switch Param="NUM_STATES">
					<Case Value="2">
						<Component ID="#NODE_ID#" Node="#NODE_ID#">
							<UseInputEvent ID="ELECTRICAL"/>
							<UseTemplate Name="ASOBO_GT_Switch_Code"/>
						</Component>
					</Case>
					<Case Value="3">
						<Component ID="ELECTRICAL_ExternalPower">
							<UseTemplate Name="ASOBO_GT_Switch_Covered">
								<NUM_STATES>3</NUM_STATES>
								<INPUT_EVENT_ID>ELECTRICAL</INPUT_EVENT_ID>
								<COVER_IE_NAME>#BTN_ID#_Cover</COVER_IE_NAME>
								<COVER_IE_ID_SOURCE>ELECTRICAL</COVER_IE_ID_SOURCE>
								<CODE_POS_0>(&gt;B:ELECTRICAL_#BTN_ID#_Bus)</CODE_POS_0>
								<CODE_POS_1>(&gt;B:ELECTRICAL_#BTN_ID#_Starter)</CODE_POS_1>
								<CODE_POS_2>(&gt;B:ELECTRICAL_#BTN_ID#_Off)</CODE_POS_2>
								<STATE0_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 0 ==</STATE0_TEST>
								<STATE1_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 1 ==</STATE1_TEST>
								<STATE2_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 2 ==</STATE2_TEST>
								<STR_STATE_0>Bus</STR_STATE_0>
								<STR_STATE_1>Starter</STR_STATE_1>
								<STR_STATE_2>Off</STR_STATE_2>
								<TT_VALUE_0>@TT_Package.GT_STATE_BUS</TT_VALUE_0>
								<TT_VALUE_1>@TT_Package.GT_STATE_STARTER</TT_VALUE_1>
								<TT_VALUE_2>@TT_Package.GT_STATE_OFF</TT_VALUE_2>
								<SET_STATE_0>
									(A:EXTERNAL POWER ON:#ID#, Bool) ! if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
									1 #SET_EXTPWR_MAIN_BUS_CONNECTION#
									0 #SET_EXTPWR_STARTER_CONNECTION#
									1 #SET_STARTER_MAIN_BUS_CONNECTION#
								</SET_STATE_0>
								<SET_STATE_1>
									(A:EXTERNAL POWER ON:#ID#, Bool) ! if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
									0 #SET_EXTPWR_MAIN_BUS_CONNECTION#
									1 #SET_EXTPWR_STARTER_CONNECTION#
									0 #SET_STARTER_MAIN_BUS_CONNECTION#
								</SET_STATE_1>
								<SET_STATE_2>
									(A:EXTERNAL POWER ON:#ID#, Bool) if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
									0 #SET_EXTPWR_MAIN_BUS_CONNECTION#
									0 #SET_EXTPWR_STARTER_CONNECTION#
									0 #SET_STARTER_MAIN_BUS_CONNECTION#
								</SET_STATE_2>
								<TOOLTIP_TITLE>@TT_Package.ELECTRICAL_EXTERNAL_POWER_TITLE</TOOLTIP_TITLE>
								<TOOLTIP_ENTRY_0>ELECTRICAL_#BTN_ID#</TOOLTIP_ENTRY_0>
								<TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_EXTERNAL_POWER_ACTION_SET</TT_DESCRIPTION_ID>
								<ON_BEFORE_SET_CODE>#GET_STATE_EXTERNAL# </ON_BEFORE_SET_CODE>
								<ENUM_VAL_TO_POS_EXTERNAL>(A:EXTERNAL POWER ON:#ID#, Bool) if{ l1 l2 ! and l3 and if{ 0 sp4 g2 } els{ 1 sp4 g2 } } els{ 2 sp4 g2 } :2 l4</ENUM_VAL_TO_POS_EXTERNAL>
								<SIMVAR_TO_WATCH_0>EXTERNAL POWER ON:#ID#</SIMVAR_TO_WATCH_0>
							</UseTemplate>
						</Component>
					</Case>
				</Switch>
			</Case>
		</Switch>
	</Template>	

	<Template Name="DD_Pushbutton_Template">
	<DefaultTemplateParameters>
		<PB_TRIGGER_NAME>#PB_ANIM_NAME#</PB_TRIGGER_NAME>
		<WWISE_EVENT>AMB_Push_In</WWISE_EVENT>
		<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
		<DIRECTION>Both</DIRECTION>
		<ACTION>Play</ACTION>
	</DefaultTemplateParameters>
	<UseTemplate Name="ASOBO_GT_Anim_Code">
		<ANIM_NAME>#PB_ANIM_NAME#</ANIM_NAME>
		<ANIM_LENGTH>3</ANIM_LENGTH>
		<ANIM_CODE>(L:#PB_ANIM_NAME#_ANIM, Number)</ANIM_CODE>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_MouseRect">
		<Cursor>Hand</Cursor>
		<MouseFlags>LeftSingle+LeftRelease</MouseFlags>
		<CALLBACKCODE>
			(M:Event) 'LeftSingle' scmi 0 == if{
			2 (&gt;L:#PB_ANIM_NAME#_ANIM)
			}
			(M:Event) 'LeftRelease' scmi 0 == if{
			(L:#PB_ANIM_NAME#_ANIM, Number) 2 == if{
			(L:#PB_TRIGGER_NAME#, Bool) ! (&gt;L:#PB_TRIGGER_NAME#)
			(L:#PB_TRIGGER_NAME#, Bool) if{
			1 (&gt;L:#PB_ANIM_NAME#_ANIM)
			} els{
			0 (&gt;L:#PB_ANIM_NAME#_ANIM)
			}
			}
			}
		</CALLBACKCODE>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_Update">
		<UPDATE_ONCE>True</UPDATE_ONCE>
		<UPDATE_CODE>
			(L:#PB_TRIGGER_NAME#, Bool) if{ 1 (&gt;L:#PB_ANIM_NAME#_ANIM) } els{ 0 (&gt;L:#PB_ANIM_NAME#_ANIM) }
		</UPDATE_CODE>
	</UseTemplate>
	<Condition Valid="PB_ANNUN_UPPER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_UPPER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_UPPER#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="PB_ANNUN_LOWER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_LOWER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_LOWER#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="DISABLE_ANIMATION">
		<False>
			<AnimationTriggers Animation="#PB_ANIM_NAME#">
				<EventTrigger NormalizedTime="#NORMALIZED_TIME#" Direction="#DIRECTION#">
					<SoundEvent WwiseEvent="#WWISE_EVENT#" Action="#ACTION#"/>
				</EventTrigger>
			</AnimationTriggers>
		</False>
	</Condition>
</Template>

<Template Name="DD_GT_Push_Button_Airliner_Dummy">
	<DefaultTemplateParameters>
		<Condition Check="POTENTIOMETER_SEQ1">
			<True>
				<SEQ1_EMISSIVE_CODE>1</SEQ1_EMISSIVE_CODE>
			</True>
			<False>
				<SEQ1_EMISSIVE_CODE>0</SEQ1_EMISSIVE_CODE>
			</False>
		</Condition>
		<Condition Check="POTENTIOMETER_SEQ2">
			<True>
				<SEQ2_EMISSIVE_CODE>1</SEQ2_EMISSIVE_CODE>
			</True>
			<False>
				<SEQ2_EMISSIVE_CODE>0</SEQ2_EMISSIVE_CODE>
			</False>
		</Condition>
	</DefaultTemplateParameters>
	
	<UseTemplate Name="DD_GT_Push_Button_Airliner">
		<DUMMY_BUTTON/>
	</UseTemplate>
</Template>

<Template Name = "DD_GT_Push_Button_Airliner">
	<DefaultTemplateParameters>
		<SEQ1_SUFFIX>_SEQ1</SEQ1_SUFFIX>
		<SEQ2_SUFFIX>_SEQ2</SEQ2_SUFFIX>
	</DefaultTemplateParameters>
	
	<UseTemplate Name="DD_GT_Push_Button_Airliner_SubTemplate">
	</UseTemplate>

</Template>


<Template Name = "DD_GT_Push_Button_Airliner_SubTemplate">
	<Parameters Type="Default">
		<Condition Check="POTENTIOMETER">
			<True>
				<POTENTIOMETER_SEQ1>#POTENTIOMETER#</POTENTIOMETER_SEQ1>
				<POTENTIOMETER_SEQ2>#POTENTIOMETER#</POTENTIOMETER_SEQ2>
			</True>
		</Condition>
		<Condition Check="SIMVAR_POWER_SETTING">
			<True>
				<SIMVAR_POWER_SETTING_SEQ1>#SIMVAR_POWER_SETTING#</SIMVAR_POWER_SETTING_SEQ1>
				<SIMVAR_POWER_SETTING_SEQ2>#SIMVAR_POWER_SETTING#</SIMVAR_POWER_SETTING_SEQ2>
			</True>
		</Condition>
		<SEQ1_EMISSIVE_CODE>1</SEQ1_EMISSIVE_CODE>
		<SEQ2_EMISSIVE_CODE>1</SEQ2_EMISSIVE_CODE>
		<SEQ1_NODE_ID>#NODE_ID##SEQ1_SUFFIX#</SEQ1_NODE_ID>
		<SEQ2_NODE_ID>#NODE_ID##SEQ2_SUFFIX#</SEQ2_NODE_ID>
		<Condition Check="ONLY_SEQ1">
			<NO_SEQ2/>
		</Condition>
		<Condition Check="ONLY_SEQ2">
			<NO_SEQ1/>
		</Condition>
		<SEQ1_EMISSIVE_DRIVES_VISIBILITY>True</SEQ1_EMISSIVE_DRIVES_VISIBILITY>
		<SEQ2_EMISSIVE_DRIVES_VISIBILITY>True</SEQ2_EMISSIVE_DRIVES_VISIBILITY>
		<SEQ1_CODE_DRIVES_VISIBILITY>False</SEQ1_CODE_DRIVES_VISIBILITY>
		<SEQ2_CODE_DRIVES_VISIBILITY>False</SEQ2_CODE_DRIVES_VISIBILITY>
		<Condition Check="NOT_DIMMABLE">
			<True>
				<SEQ1_NOT_DIMMABLE>#NOT_DIMMABLE#</SEQ1_NOT_DIMMABLE>
				<SEQ2_NOT_DIMMABLE>#NOT_DIMMABLE#</SEQ2_NOT_DIMMABLE>
			</True>
			<False>
				<SEQ1_NOT_DIMMABLE>False</SEQ1_NOT_DIMMABLE>
				<SEQ2_NOT_DIMMABLE>False</SEQ2_NOT_DIMMABLE>
			</False>
		</Condition>
		<IS_SWITCH>False</IS_SWITCH>
	</Parameters>
	<Parameters Type="Default">
		<Condition Check="COVER_NODE_ID">
			<COVER_INIT_VALUE>0</COVER_INIT_VALUE>
			<COVER_IE_NAME>#NODE_ID#_Cover</COVER_IE_NAME>
			<Condition NotEmpty="INPUT_EVENT_ID">
				<True>
					<COVER_IE_ID_SOURCE>#INPUT_EVENT_ID#</COVER_IE_ID_SOURCE>
				</True>
				<False>
					<COVER_IE_ID_SOURCE>COMMON</COVER_IE_ID_SOURCE>					
				</False>
			</Condition>
			<COVER_USE_INPUT_EVENT>COMMON</COVER_USE_INPUT_EVENT>
			<COVER_INVERT_SWITCH_ON_CONDITION>False</COVER_INVERT_SWITCH_ON_CONDITION>
			<COVER_INVERT_WHEEL_INTERACTION>False</COVER_INVERT_WHEEL_INTERACTION>
			<TT_DESCRIPTION_ID_COVER>@TT_Package.COMMON_COVER_ACTION</TT_DESCRIPTION_ID_COVER>
			<TOOLTIP_TITLE_COVER>@TT_Package.COMMON_COVER_TITLE</TOOLTIP_TITLE_COVER>
			<ON_COVER_OPENED/>
			<ON_COVER_CLOSED/>
			<TT_ICON_COVER>MOVE_Y</TT_ICON_COVER>
			<NO_INTERACTION_WHEN_COVERED>True</NO_INTERACTION_WHEN_COVERED>
		</Condition>
	</Parameters>
	<Parameters Type="Default">
		<Condition Check="COVER_NODE_ID">
			<IS_COVER_OPENED>(B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#, Bool)</IS_COVER_OPENED>
			<COVER_VAR_NAME>#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Position</COVER_VAR_NAME>
			<COVER_VAR_TYPE>O</COVER_VAR_TYPE>
			<WWISE_COVER_EVENT_OPEN>cover_open</WWISE_COVER_EVENT_OPEN>
			<WWISE_COVER_EVENT_CLOSE>cover_close</WWISE_COVER_EVENT_CLOSE>
		</Condition>
	</Parameters>
	<Parameters Type="Override">
		<Condition Check="DOWN_STATE_CODE">
			<False>
				<Condition Valid="SEQ1_CODE_DRIVES_DOWN_STATE">
					<True>
						<DOWN_STATE_CODE>#SEQ1_EMISSIVE_CODE#</DOWN_STATE_CODE>
					</True>
				</Condition>
				<Condition Valid="SEQ2_CODE_DRIVES_DOWN_STATE">
					<True>
						<DOWN_STATE_CODE>#SEQ2_EMISSIVE_CODE#</DOWN_STATE_CODE>
					</True>
				</Condition>
			</False>
		</Condition>
	</Parameters>
	<EditableTemplateParameters>
		<AddParams>
			<SEQ1_NODE_ID></SEQ1_NODE_ID>
			<SEQ2_NODE_ID></SEQ2_NODE_ID>
		</AddParams>
	</EditableTemplateParameters>

	<Condition Check="DUMMY_BUTTON">
		<False>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Parameters Type="Default">
					<Switch>
						<Case Valid="HAS_LONG_PRESS">
							<PUSH_TEMPLATE_TO_USE>ASOBO_GT_Push_Button_Timed</PUSH_TEMPLATE_TO_USE>
						</Case>
						<Default>
							<PUSH_TEMPLATE_TO_USE>ASOBO_GT_Push_Button</PUSH_TEMPLATE_TO_USE>
						</Default>
					</Switch>
				</Parameters>
				<Parameters Type="Override">
					<Condition Check="COVER_NODE_ID">
						<True>
							<LEFT_SINGLE_CODE>(B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#, Bool) if{ #LEFT_SINGLE_CODE# }</LEFT_SINGLE_CODE>
						</True>
					</Condition>
				</Parameters>
				<Condition Check="INPUT_EVENT_ID">
					<UseInputEvent ID="#INPUT_EVENT_ID#"/>					
				</Condition>
				<Condition Check="DOWN_STATE_CODE">
					<True>
						<UseTemplate Name = "ASOBO_GT_Switch_Code">
							<ANIM_CODE>#DOWN_STATE_CODE# 100 *</ANIM_CODE>
						</UseTemplate>
					</True>
					<False>
						<UseTemplate Name="#PUSH_TEMPLATE_TO_USE#"/>
					</False>
				</Condition>
			</Component>
			
			<Condition Check="COVER_NODE_ID">
				<True>
					<Component ID="#COVER_NODE_ID#" Node="#COVER_NODE_ID#">
						<Parameters Type="Override">
							<Condition NotEmpty="INVERT_COVER_ANIM">
								<INVERT_ANIM>#INVERT_COVER_ANIM#</INVERT_ANIM>
							</Condition>
							<INVERT_SWITCH_ON_CONDITION>#COVER_INVERT_SWITCH_ON_CONDITION#</INVERT_SWITCH_ON_CONDITION>
							<INVERT_WHEEL_INTERACTION>#COVER_INVERT_WHEEL_INTERACTION#</INVERT_WHEEL_INTERACTION>
							<ON_STATE_CHANGED_EXTERNAL_CODE/>
						</Parameters>
						<Condition NotEmpty="OPEN_COVER_CONDITION">
							<UseTemplate Name="ASOBO_GT_Update">
								<FREQUENCY>5</FREQUENCY>
								<UPDATE_CODE>#OPEN_COVER_CONDITION# != if{ (&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Open) }</UPDATE_CODE>
							</UseTemplate>
						</Condition>
						<UseTemplate Name="ASOBO_GT_Update">
							<UPDATE_ONCE>True</UPDATE_ONCE>
							<UPDATE_CODE>#COVER_INIT_VALUE# (&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Set)</UPDATE_CODE>
						</UseTemplate>
						<UseInputEvent ID="#COVER_USE_INPUT_EVENT#">
							<BTN_ID>#COVER_IE_NAME#</BTN_ID>
							<INPUT_EVENT_ID_SOURCE>#COVER_IE_ID_SOURCE#</INPUT_EVENT_ID_SOURCE>
							<TT_ICON>#TT_ICON_COVER#</TT_ICON>
							<Condition Check="NUM_STATES" Match="3">
								<True>
									<SET_STATE_1>1 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_OPENED#</SET_STATE_1>
									<SET_STATE_0>0 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_CLOSED#</SET_STATE_0>
									<SET_STATE_2/>
								</True>
								<False>
									<SET_STATE_ON>1 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_OPENED#</SET_STATE_ON>
									<SET_STATE_OFF>0 (&gt;#COVER_VAR_TYPE#:#COVER_VAR_NAME#) #ON_COVER_CLOSED#</SET_STATE_OFF>
								</False>
							</Condition>
							<ON_BEFORE_INC_CODE/>
							<ON_BEFORE_DEC_CODE/>
							<ON_BEFORE_SET_CODE/>
							<ON_AFTER_INC_CODE/>
							<ON_AFTER_DEC_CODE/>
							<ON_AFTER_SET_CODE/>
							<GET_STATE_EXTERNAL>(#COVER_VAR_TYPE#:#COVER_VAR_NAME#) sp0</GET_STATE_EXTERNAL>
							<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
							<TT_DESCRIPTION_ID>#TT_DESCRIPTION_ID_COVER#</TT_DESCRIPTION_ID>
							<STR_STATE_OFF>Close</STR_STATE_OFF>
							<STR_STATE_ON>Open</STR_STATE_ON>
							<TT_VALUE_OFF>@TT_Closed</TT_VALUE_OFF>
							<TT_VALUE_ON>@TT_Open</TT_VALUE_ON>
							<NUM_STATES>2</NUM_STATES>
							<SIMVAR_TO_WATCH_0/>
							<LOCAL_VAR_TO_WATCH_0/>
						</UseInputEvent>
						<UseTemplate Name="ASOBO_GT_Switch_Code">
							<TOOLTIP_TITLE>#TOOLTIP_TITLE_COVER#</TOOLTIP_TITLE>
							<TOOLTIP_ENTRY_0>#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#</TOOLTIP_ENTRY_0>
							<ANIM_NAME>#COVER_ANIM_NAME#</ANIM_NAME>
							<ANIM_CODE>#IS_COVER_OPENED# 100 *</ANIM_CODE>
							<LEFT_SINGLE_CODE>(&gt;B:#COVER_IE_ID_SOURCE#_#COVER_IE_NAME#_Toggle)</LEFT_SINGLE_CODE>
							<WWISE_EVENT_1>#WWISE_COVER_EVENT_OPEN#</WWISE_EVENT_1>
							<WWISE_EVENT_2>#WWISE_COVER_EVENT_CLOSE#</WWISE_EVENT_2>
						</UseTemplate>
					</Component>
				</True>
			</Condition>
		</False>
		<True>
			<Condition Valid="IS_INOP">
				<True>
					<UseTemplate Name="ASOBO_GT_Interaction_Tooltip">
						<Condition>
							<Test>
								<And>
									<Arg Check="DOWN_STATE_CODE"/>
									<Arg Check="ANIM_NAME"/>
								</And>
							</Test>
							<True>
								<ANIM_POS>#DOWN_STATE_CODE# 100 *</ANIM_POS>
							</True>
						</Condition>
					</UseTemplate>
				</True>
			</Condition>
		</True>
	</Condition>
	
	<Condition Check="NO_SEQ1">
		<False>
			<Component ID="#SEQ1_NODE_ID#_S1" Node="#SEQ1_NODE_ID#">
				<UseTemplate Name ="ASOBO_GT_Emissive_Gauge">
					<Condition NotEmpty="SEQ1_FAILURE">
						<FAILURE>#SEQ1_FAILURE#</FAILURE>
					</Condition>
					<Switch>
						<Case Valid="SEQ1_NOT_DIMMABLE">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="POTENTIOMETER_SEQ1">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE# (A:LIGHT POTENTIOMETER:#POTENTIOMETER_SEQ1#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="SIMVAR_POWER_SETTING_SEQ1">
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE# (A:#SIMVAR_POWER_SETTING_SEQ1#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Default>
							<EMISSIVE_CODE>#SEQ1_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Default>
					</Switch>
					<Condition Valid="SEQ1_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
					<Condition Valid="SEQ1_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
				</UseTemplate>
				<Condition Valid="SEQ1_CODE_DRIVES_VISIBILITY">
					<True>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#SEQ1_EMISSIVE_CODE# 0 &gt;</VISIBILITY_CODE>
						</UseTemplate>
					</True>
				</Condition>
			</Component>
		</False>
	</Condition>
	
	<Condition Check="NO_SEQ2">
		<False>
			<Component ID="#SEQ2_NODE_ID#_S2" Node="#SEQ2_NODE_ID#">
				<UseTemplate Name ="ASOBO_GT_Emissive_Gauge">
					<Condition NotEmpty="SEQ2_FAILURE">
						<FAILURE>#SEQ2_FAILURE#</FAILURE>
					</Condition>
					<Switch>
						<Case Valid="SEQ2_NOT_DIMMABLE">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="POTENTIOMETER_SEQ2">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE# (A:LIGHT POTENTIOMETER:#POTENTIOMETER_SEQ2#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Case NotEmpty="SIMVAR_POWER_SETTING_SEQ2">
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE# (A:#SIMVAR_POWER_SETTING_SEQ2#, Percent over 100) *</EMISSIVE_CODE>
						</Case>
						<Default>
							<EMISSIVE_CODE>#SEQ2_EMISSIVE_CODE#</EMISSIVE_CODE>
						</Default>
					</Switch>
					<Condition Valid="SEQ2_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
					<Condition Valid="SEQ2_EMISSIVE_DRIVES_VISIBILITY">
						<True>
							<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
						</True>
					</Condition>
				</UseTemplate>
				<Condition Valid="SEQ2_CODE_DRIVES_VISIBILITY">
					<True>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#SEQ2_EMISSIVE_CODE# 0 &gt;</VISIBILITY_CODE>
						</UseTemplate>
					</True>
				</Condition>
			</Component>
		</False>
	</Condition>
</Template>


<Template Name="DD_AIRLINER_SIGNS_LIGHT_Template">
        <DefaultTemplateParameters>
            <SEQ_POWERED>1</SEQ_POWERED>
        </DefaultTemplateParameters>

        <UseTemplate Name="FBW_Push_Toggle">
            <SEQ1_CODE>0</SEQ1_CODE>
            <SEQ2_CODE>(L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position) 2 == (L:DD_OVHD_INTLT_ANN) 0 == or</SEQ2_CODE>
            <DUMMY_BUTTON/>
        </UseTemplate>
    </Template>


<Template Name="Autopilot_Altitude_100">
    <DefaultTemplateParameters>
        <ANIM_NAME>AP_altitude_100</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
          <ANIM_CODE>(A:AUTOPILOT ALTITUDE LOCK VAR, feet) 10 / 100 %</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Altitude_1000">
    <DefaultTemplateParameters>
        <ANIM_NAME>AP_altitude_1000</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Altitude_10000">
    <DefaultTemplateParameters>
        <ANIM_NAME>AP_altitude_10000</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 1000 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Heading_1">
    <DefaultTemplateParameters>
        <ANIM_NAME>Heading_1</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT HEADING LOCK DIR, Degrees) 1 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Heading_10">
    <DefaultTemplateParameters>
        <ANIM_NAME>Heading_10</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT HEADING LOCK DIR, Degrees) 1 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Heading_100">
    <DefaultTemplateParameters>
        <ANIM_NAME>Heading_100</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT HEADING LOCK DIR, Degrees) 10 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Speed_1">
    <DefaultTemplateParameters>
        <ANIM_NAME>Speed_1</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 1 / 100 %</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Speed_10">
    <DefaultTemplateParameters>
        <ANIM_NAME>Speed_10</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 1 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_Speed_100">
    <DefaultTemplateParameters>
        <ANIM_NAME>Speed_100</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 10 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>


<Template Name="Autopilot_VS_100">
    <DefaultTemplateParameters>
        <ANIM_NAME>VS_100</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT VERTICAL HOLD VAR, Feet/minute) 10 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_VS_1000">
    <DefaultTemplateParameters>
        <ANIM_NAME>VS_1000</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT VERTICAL HOLD VAR, Feet/minute) 100 / 100 % 10 / flr 10 *</ANIM_CODE>
    </UseTemplate>
</Template>

<Template Name="Autopilot_VS_Plus">
    <DefaultTemplateParameters>
        <ANIM_NAME>VS_plus</ANIM_NAME>
        <ANIM_LENGTH>100</ANIM_LENGTH>
    </DefaultTemplateParameters>

    <UseTemplate Name="ASOBO_GT_Anim_Code">
        <ANIM_WRAP>True</ANIM_WRAP>
        <ANIM_CODE>(A:AUTOPILOT VS SLOT INDEX, Number)</ANIM_CODE>
    </UseTemplate>
</Template>


<Template Name="DD_Switch2_Template">
	<Parameters Type="Default">
		<NODE_ID>#SWITCH_ANIM_NAME#</NODE_ID>
		<ANIM_LAG>400</ANIM_LAG>
		<CURSOR>Hand</CURSOR>
		<WWISE_EVENT>AMB_Switch_Off</WWISE_EVENT>
		<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
		<DIRECTION>Both</DIRECTION>
		<ACTION>Play</ACTION>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Anim_Code">
		<ANIM_NAME>#SWITCH_ANIM_NAME#</ANIM_NAME>
		<ANIM_LENGTH>1</ANIM_LENGTH>
		<ANIM_CODE>(L:ADG_POS, Bool)</ANIM_CODE>
		<ANIM_LAG>400</ANIM_LAG>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_MouseRect">
		<MouseFlags>LeftSingle+WheelDown+WheelUp</MouseFlags>
		<CURSOR>#CURSOR#</CURSOR>
		<NODE_ID>#SWITCH_ANIM_NAME#</NODE_ID>
		<CALLBACKCODE>
			(M:Event) 'LeftSingle' scmi 0 == (M:Event) 'WheelDown' scmi 0 == or (M:Event) 'WheelUp' scmi 0 == or if{
			(L:ADG_POS, Bool) ! (&gt;L:ADG_POS)
			}
		</CALLBACKCODE>
	</UseTemplate>
</Template>

</ModelBehaviors>

<Template Name ="DD_PB_Guard">
	<Parameters Type="Default">
		<WAIT_TENTHS>15</WAIT_TENTHS>
		<NODE_ID>#PB_ANIM_NAME#_GUARD</NODE_ID>
		<PB_LOCK_NAME>0</PB_LOCK_NAME>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Anim_Code">
		<ANIM_NAME>#PB_ANIM_NAME#_GUARD</ANIM_NAME>
		<ANIM_LENGTH>1</ANIM_LENGTH>
		<ANIM_CODE>(L:#PB_ANIM_NAME#_GUARD, Number)</ANIM_CODE>
		<ANIM_LAG>10</ANIM_LAG>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_MouseRect">
		<Cursor>Hand</Cursor>
		<MouseFlags>LeftSingle</MouseFlags>
		<CALLBACKCODE>
			(M:Event) 'LeftSingle' scmi 0 == if{
			(L:#PB_ANIM_NAME#_GUARD, number) 0 == if{
			1 (&gt;L:#PB_ANIM_NAME#_GUARD)
			#WAIT_TENTHS# (&gt;L:#PB_ANIM_NAME#_GUARD_COUNT)
			} els{
			0 (&gt;L:#PB_ANIM_NAME#_GUARD)
			0 (&gt;L:#PB_ANIM_NAME#_GUARD_COUNT)
			}
			}
		</CALLBACKCODE>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_Update">
		<FREQUENCY>10</FREQUENCY>
		<UPDATE_CODE>
			(L:#PB_ANIM_NAME#_GUARD_COUNT, number) 0 &gt; if{
			(L:#PB_LOCK_NAME#, number) 0 == if{
			(L:#PB_ANIM_NAME#_GUARD_COUNT, number) -- (&gt;L:#PB_ANIM_NAME#_GUARD_COUNT)
			}
			}
			els{
			0 (&gt;L:#PB_ANIM_NAME#_GUARD)
			}
		</UPDATE_CODE>
	</UseTemplate>
</Template>

<Template Name="DD_Pushbutton_Template">
	<Parameters Type="Default">
		<PB_TRIGGER_NAME>#PB_ANIM_NAME#</PB_TRIGGER_NAME>
		<WWISE_EVENT>AMB_Push_In</WWISE_EVENT>
		<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
		<DIRECTION>Both</DIRECTION>
		<ACTION>Play</ACTION>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Anim_Code">
		<ANIM_NAME>#PB_ANIM_NAME#</ANIM_NAME>
		<ANIM_LENGTH>3</ANIM_LENGTH>
		<ANIM_CODE>(L:#PB_ANIM_NAME#_ANIM, Number)</ANIM_CODE>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_MouseRect">
		<Cursor>Hand</Cursor>
		<MouseFlags>LeftSingle+LeftRelease</MouseFlags>
		<CALLBACKCODE>
			(M:Event) 'LeftSingle' scmi 0 == if{
			2 (&gt;L:#PB_ANIM_NAME#_ANIM)
			}
			(M:Event) 'LeftRelease' scmi 0 == if{
			(L:#PB_ANIM_NAME#_ANIM, Number) 2 == if{
			(L:#PB_TRIGGER_NAME#, Bool) ! (&gt;L:#PB_TRIGGER_NAME#)
			(L:#PB_TRIGGER_NAME#, Bool) if{
			1 (&gt;L:#PB_ANIM_NAME#_ANIM)
			} els{
			0 (&gt;L:#PB_ANIM_NAME#_ANIM)
			}
			}
			}
		</CALLBACKCODE>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_Update">
		<UPDATE_ONCE>True</UPDATE_ONCE>
		<UPDATE_CODE>
			(L:#PB_TRIGGER_NAME#, Bool) if{ 1 (&gt;L:#PB_ANIM_NAME#_ANIM) } els{ 0 (&gt;L:#PB_ANIM_NAME#_ANIM) }
		</UPDATE_CODE>
	</UseTemplate>
	<Condition Valid="PB_ANNUN_UPPER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_UPPER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_UPPER#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="PB_ANNUN_LOWER">
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#PB_ANNUN_LOWER#</NODE_ID>
			<EMISSIVE_CODE>(L:#PB_ANNUN_LOWER#, Bool)</EMISSIVE_CODE>
			<EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
			<POTENTIOMETER>8</POTENTIOMETER>
		</UseTemplate>
	</Condition>
	<Condition Valid="DISABLE_ANIMATION">
		<False>
			<AnimationTriggers Animation="#PB_ANIM_NAME#">
				<EventTrigger NormalizedTime="#NORMALIZED_TIME#" Direction="#DIRECTION#">
					<SoundEvent WwiseEvent="#WWISE_EVENT#" Action="#ACTION#"/>
				</EventTrigger>
			</AnimationTriggers>
		</False>
	</Condition>
</Template>

